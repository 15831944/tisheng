//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMST.Storage.Client.Proxy.ChargeManageProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Job", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.ChargeManage")]
    [System.SerializableAttribute()]
    public partial class Job : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BillNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BillTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CheckTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CheckerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EditCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EditTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EditerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.JobDetail> JdesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MakeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrintCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrintTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PrinterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrinterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BillNo {
            get {
                return this.BillNoField;
            }
            set {
                if ((this.BillNoField.Equals(value) != true)) {
                    this.BillNoField = value;
                    this.RaisePropertyChanged("BillNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BillType {
            get {
                return this.BillTypeField;
            }
            set {
                if ((this.BillTypeField.Equals(value) != true)) {
                    this.BillTypeField = value;
                    this.RaisePropertyChanged("BillType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CheckTime {
            get {
                return this.CheckTimeField;
            }
            set {
                if ((this.CheckTimeField.Equals(value) != true)) {
                    this.CheckTimeField = value;
                    this.RaisePropertyChanged("CheckTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Checker {
            get {
                return this.CheckerField;
            }
            set {
                if ((this.CheckerField.Equals(value) != true)) {
                    this.CheckerField = value;
                    this.RaisePropertyChanged("Checker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckerName {
            get {
                return this.CheckerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckerNameField, value) != true)) {
                    this.CheckerNameField = value;
                    this.RaisePropertyChanged("CheckerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepID {
            get {
                return this.DepIDField;
            }
            set {
                if ((this.DepIDField.Equals(value) != true)) {
                    this.DepIDField = value;
                    this.RaisePropertyChanged("DepID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepName {
            get {
                return this.DepNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepNameField, value) != true)) {
                    this.DepNameField = value;
                    this.RaisePropertyChanged("DepName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EditCount {
            get {
                return this.EditCountField;
            }
            set {
                if ((this.EditCountField.Equals(value) != true)) {
                    this.EditCountField = value;
                    this.RaisePropertyChanged("EditCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EditTime {
            get {
                return this.EditTimeField;
            }
            set {
                if ((this.EditTimeField.Equals(value) != true)) {
                    this.EditTimeField = value;
                    this.RaisePropertyChanged("EditTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Editer {
            get {
                return this.EditerField;
            }
            set {
                if ((this.EditerField.Equals(value) != true)) {
                    this.EditerField = value;
                    this.RaisePropertyChanged("Editer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditerName {
            get {
                return this.EditerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EditerNameField, value) != true)) {
                    this.EditerNameField = value;
                    this.RaisePropertyChanged("EditerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfDel {
            get {
                return this.IfDelField;
            }
            set {
                if ((this.IfDelField.Equals(value) != true)) {
                    this.IfDelField = value;
                    this.RaisePropertyChanged("IfDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.JobDetail> Jdes {
            get {
                return this.JdesField;
            }
            set {
                if ((object.ReferenceEquals(this.JdesField, value) != true)) {
                    this.JdesField = value;
                    this.RaisePropertyChanged("Jdes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MakeTime {
            get {
                return this.MakeTimeField;
            }
            set {
                if ((this.MakeTimeField.Equals(value) != true)) {
                    this.MakeTimeField = value;
                    this.RaisePropertyChanged("MakeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Maker {
            get {
                return this.MakerField;
            }
            set {
                if ((this.MakerField.Equals(value) != true)) {
                    this.MakerField = value;
                    this.RaisePropertyChanged("Maker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakerName {
            get {
                return this.MakerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MakerNameField, value) != true)) {
                    this.MakerNameField = value;
                    this.RaisePropertyChanged("MakerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrintCount {
            get {
                return this.PrintCountField;
            }
            set {
                if ((this.PrintCountField.Equals(value) != true)) {
                    this.PrintCountField = value;
                    this.RaisePropertyChanged("PrintCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PrintTime {
            get {
                return this.PrintTimeField;
            }
            set {
                if ((this.PrintTimeField.Equals(value) != true)) {
                    this.PrintTimeField = value;
                    this.RaisePropertyChanged("PrintTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Printer {
            get {
                return this.PrinterField;
            }
            set {
                if ((this.PrinterField.Equals(value) != true)) {
                    this.PrinterField = value;
                    this.RaisePropertyChanged("Printer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrinterName {
            get {
                return this.PrinterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrinterNameField, value) != true)) {
                    this.PrinterNameField = value;
                    this.RaisePropertyChanged("PrinterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobDetail", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.ChargeManage")]
    [System.SerializableAttribute()]
    public partial class JobDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountOfMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JdeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JmoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JmoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JtyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JtyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OpeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RateStandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WorkLoadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountOfMoney {
            get {
                return this.AmountOfMoneyField;
            }
            set {
                if ((this.AmountOfMoneyField.Equals(value) != true)) {
                    this.AmountOfMoneyField = value;
                    this.RaisePropertyChanged("AmountOfMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JdeId {
            get {
                return this.JdeIdField;
            }
            set {
                if ((this.JdeIdField.Equals(value) != true)) {
                    this.JdeIdField = value;
                    this.RaisePropertyChanged("JdeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JmoId {
            get {
                return this.JmoIdField;
            }
            set {
                if ((this.JmoIdField.Equals(value) != true)) {
                    this.JmoIdField = value;
                    this.RaisePropertyChanged("JmoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JmoName {
            get {
                return this.JmoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JmoNameField, value) != true)) {
                    this.JmoNameField = value;
                    this.RaisePropertyChanged("JmoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JtyId {
            get {
                return this.JtyIdField;
            }
            set {
                if ((this.JtyIdField.Equals(value) != true)) {
                    this.JtyIdField = value;
                    this.RaisePropertyChanged("JtyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JtyName {
            get {
                return this.JtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JtyNameField, value) != true)) {
                    this.JtyNameField = value;
                    this.RaisePropertyChanged("JtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OpeId {
            get {
                return this.OpeIdField;
            }
            set {
                if ((this.OpeIdField.Equals(value) != true)) {
                    this.OpeIdField = value;
                    this.RaisePropertyChanged("OpeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpeName {
            get {
                return this.OpeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeNameField, value) != true)) {
                    this.OpeNameField = value;
                    this.RaisePropertyChanged("OpeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RateStand {
            get {
                return this.RateStandField;
            }
            set {
                if ((this.RateStandField.Equals(value) != true)) {
                    this.RateStandField = value;
                    this.RaisePropertyChanged("RateStand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal WorkLoad {
            get {
                return this.WorkLoadField;
            }
            set {
                if ((this.WorkLoadField.Equals(value) != true)) {
                    this.WorkLoadField = value;
                    this.RaisePropertyChanged("WorkLoad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobQueryModel", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.ChargeManage")]
    [System.SerializableAttribute()]
    public partial class JobQueryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BillNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BillTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DepIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JobIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JtyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OpeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BillNO {
            get {
                return this.BillNOField;
            }
            set {
                if ((this.BillNOField.Equals(value) != true)) {
                    this.BillNOField = value;
                    this.RaisePropertyChanged("BillNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BillType {
            get {
                return this.BillTypeField;
            }
            set {
                if ((this.BillTypeField.Equals(value) != true)) {
                    this.BillTypeField = value;
                    this.RaisePropertyChanged("BillType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DateType {
            get {
                return this.DateTypeField;
            }
            set {
                if ((this.DateTypeField.Equals(value) != true)) {
                    this.DateTypeField = value;
                    this.RaisePropertyChanged("DateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DepID {
            get {
                return this.DepIDField;
            }
            set {
                if ((this.DepIDField.Equals(value) != true)) {
                    this.DepIDField = value;
                    this.RaisePropertyChanged("DepID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JobID {
            get {
                return this.JobIDField;
            }
            set {
                if ((this.JobIDField.Equals(value) != true)) {
                    this.JobIDField = value;
                    this.RaisePropertyChanged("JobID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JtyId {
            get {
                return this.JtyIdField;
            }
            set {
                if ((this.JtyIdField.Equals(value) != true)) {
                    this.JtyIdField = value;
                    this.RaisePropertyChanged("JtyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Maker {
            get {
                return this.MakerField;
            }
            set {
                if ((this.MakerField.Equals(value) != true)) {
                    this.MakerField = value;
                    this.RaisePropertyChanged("Maker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OpeId {
            get {
                return this.OpeIdField;
            }
            set {
                if ((this.OpeIdField.Equals(value) != true)) {
                    this.OpeIdField = value;
                    this.RaisePropertyChanged("OpeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobMode", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.ChargeManage")]
    [System.SerializableAttribute()]
    public partial class JobMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HelpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JmoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseStstusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstId {
            get {
                return this.CmstIdField;
            }
            set {
                if ((this.CmstIdField.Equals(value) != true)) {
                    this.CmstIdField = value;
                    this.RaisePropertyChanged("CmstId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HelpCode {
            get {
                return this.HelpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HelpCodeField, value) != true)) {
                    this.HelpCodeField = value;
                    this.RaisePropertyChanged("HelpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfDel {
            get {
                return this.IfDelField;
            }
            set {
                if ((this.IfDelField.Equals(value) != true)) {
                    this.IfDelField = value;
                    this.RaisePropertyChanged("IfDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JmoId {
            get {
                return this.JmoIdField;
            }
            set {
                if ((this.JmoIdField.Equals(value) != true)) {
                    this.JmoIdField = value;
                    this.RaisePropertyChanged("JmoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseStstus {
            get {
                return this.UseStstusField;
            }
            set {
                if ((object.ReferenceEquals(this.UseStstusField, value) != true)) {
                    this.UseStstusField = value;
                    this.RaisePropertyChanged("UseStstus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobType", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.ChargeManage")]
    [System.SerializableAttribute()]
    public partial class JobType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JtyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JtyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseStstusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstId {
            get {
                return this.CmstIdField;
            }
            set {
                if ((this.CmstIdField.Equals(value) != true)) {
                    this.CmstIdField = value;
                    this.RaisePropertyChanged("CmstId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JtyId {
            get {
                return this.JtyIdField;
            }
            set {
                if ((this.JtyIdField.Equals(value) != true)) {
                    this.JtyIdField = value;
                    this.RaisePropertyChanged("JtyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JtyName {
            get {
                return this.JtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JtyNameField, value) != true)) {
                    this.JtyNameField = value;
                    this.RaisePropertyChanged("JtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseStstus {
            get {
                return this.UseStstusField;
            }
            set {
                if ((object.ReferenceEquals(this.UseStstusField, value) != true)) {
                    this.UseStstusField = value;
                    this.RaisePropertyChanged("UseStstus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchCharge", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.Charge")]
    [System.SerializableAttribute()]
    public partial class BatchCharge : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BchBillnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BchBilltypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BchChargetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BchCheckNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BchChecktimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BchCmstIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BchComIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BchMakeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BchMaketimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BchOpeCheckerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BchOpeMakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BchRemark1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BchRemark2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BchStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BchStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.ChargeBill> CbsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BchBillno {
            get {
                return this.BchBillnoField;
            }
            set {
                if ((this.BchBillnoField.Equals(value) != true)) {
                    this.BchBillnoField = value;
                    this.RaisePropertyChanged("BchBillno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BchBilltype {
            get {
                return this.BchBilltypeField;
            }
            set {
                if ((this.BchBilltypeField.Equals(value) != true)) {
                    this.BchBilltypeField = value;
                    this.RaisePropertyChanged("BchBilltype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BchChargetype {
            get {
                return this.BchChargetypeField;
            }
            set {
                if ((this.BchChargetypeField.Equals(value) != true)) {
                    this.BchChargetypeField = value;
                    this.RaisePropertyChanged("BchChargetype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BchCheckName {
            get {
                return this.BchCheckNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BchCheckNameField, value) != true)) {
                    this.BchCheckNameField = value;
                    this.RaisePropertyChanged("BchCheckName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BchChecktime {
            get {
                return this.BchChecktimeField;
            }
            set {
                if ((this.BchChecktimeField.Equals(value) != true)) {
                    this.BchChecktimeField = value;
                    this.RaisePropertyChanged("BchChecktime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BchCmstId {
            get {
                return this.BchCmstIdField;
            }
            set {
                if ((this.BchCmstIdField.Equals(value) != true)) {
                    this.BchCmstIdField = value;
                    this.RaisePropertyChanged("BchCmstId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BchComId {
            get {
                return this.BchComIdField;
            }
            set {
                if ((this.BchComIdField.Equals(value) != true)) {
                    this.BchComIdField = value;
                    this.RaisePropertyChanged("BchComId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BchId {
            get {
                return this.BchIdField;
            }
            set {
                if ((this.BchIdField.Equals(value) != true)) {
                    this.BchIdField = value;
                    this.RaisePropertyChanged("BchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BchMakeName {
            get {
                return this.BchMakeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BchMakeNameField, value) != true)) {
                    this.BchMakeNameField = value;
                    this.RaisePropertyChanged("BchMakeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BchMaketime {
            get {
                return this.BchMaketimeField;
            }
            set {
                if ((this.BchMaketimeField.Equals(value) != true)) {
                    this.BchMaketimeField = value;
                    this.RaisePropertyChanged("BchMaketime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BchOpeChecker {
            get {
                return this.BchOpeCheckerField;
            }
            set {
                if ((this.BchOpeCheckerField.Equals(value) != true)) {
                    this.BchOpeCheckerField = value;
                    this.RaisePropertyChanged("BchOpeChecker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BchOpeMaker {
            get {
                return this.BchOpeMakerField;
            }
            set {
                if ((this.BchOpeMakerField.Equals(value) != true)) {
                    this.BchOpeMakerField = value;
                    this.RaisePropertyChanged("BchOpeMaker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BchRemark1 {
            get {
                return this.BchRemark1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BchRemark1Field, value) != true)) {
                    this.BchRemark1Field = value;
                    this.RaisePropertyChanged("BchRemark1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BchRemark2 {
            get {
                return this.BchRemark2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BchRemark2Field, value) != true)) {
                    this.BchRemark2Field = value;
                    this.RaisePropertyChanged("BchRemark2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BchStatus {
            get {
                return this.BchStatusField;
            }
            set {
                if ((this.BchStatusField.Equals(value) != true)) {
                    this.BchStatusField = value;
                    this.RaisePropertyChanged("BchStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BchStatusName {
            get {
                return this.BchStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BchStatusNameField, value) != true)) {
                    this.BchStatusNameField = value;
                    this.RaisePropertyChanged("BchStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.ChargeBill> Cbs {
            get {
                return this.CbsField;
            }
            set {
                if ((object.ReferenceEquals(this.CbsField, value) != true)) {
                    this.CbsField = value;
                    this.RaisePropertyChanged("Cbs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChargeBill", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.Charge")]
    [System.SerializableAttribute()]
    public partial class ChargeBill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CbiBchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CbiBillnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CbiBilltypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CbiChargeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CbiChecktimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CbiComIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CbiCtyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CbiIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CbiMaketimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CbiOpeCheckerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CbiOpeMakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CbiPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CbiPayableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CbiRemark1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CbiRemark2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CbiStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CbiSumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CbiBchId {
            get {
                return this.CbiBchIdField;
            }
            set {
                if ((this.CbiBchIdField.Equals(value) != true)) {
                    this.CbiBchIdField = value;
                    this.RaisePropertyChanged("CbiBchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CbiBillno {
            get {
                return this.CbiBillnoField;
            }
            set {
                if ((this.CbiBillnoField.Equals(value) != true)) {
                    this.CbiBillnoField = value;
                    this.RaisePropertyChanged("CbiBillno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CbiBilltype {
            get {
                return this.CbiBilltypeField;
            }
            set {
                if ((this.CbiBilltypeField.Equals(value) != true)) {
                    this.CbiBilltypeField = value;
                    this.RaisePropertyChanged("CbiBilltype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CbiChargeType {
            get {
                return this.CbiChargeTypeField;
            }
            set {
                if ((this.CbiChargeTypeField.Equals(value) != true)) {
                    this.CbiChargeTypeField = value;
                    this.RaisePropertyChanged("CbiChargeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CbiChecktime {
            get {
                return this.CbiChecktimeField;
            }
            set {
                if ((this.CbiChecktimeField.Equals(value) != true)) {
                    this.CbiChecktimeField = value;
                    this.RaisePropertyChanged("CbiChecktime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CbiComId {
            get {
                return this.CbiComIdField;
            }
            set {
                if ((this.CbiComIdField.Equals(value) != true)) {
                    this.CbiComIdField = value;
                    this.RaisePropertyChanged("CbiComId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CbiCtyId {
            get {
                return this.CbiCtyIdField;
            }
            set {
                if ((this.CbiCtyIdField.Equals(value) != true)) {
                    this.CbiCtyIdField = value;
                    this.RaisePropertyChanged("CbiCtyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CbiId {
            get {
                return this.CbiIdField;
            }
            set {
                if ((this.CbiIdField.Equals(value) != true)) {
                    this.CbiIdField = value;
                    this.RaisePropertyChanged("CbiId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CbiMaketime {
            get {
                return this.CbiMaketimeField;
            }
            set {
                if ((this.CbiMaketimeField.Equals(value) != true)) {
                    this.CbiMaketimeField = value;
                    this.RaisePropertyChanged("CbiMaketime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CbiOpeChecker {
            get {
                return this.CbiOpeCheckerField;
            }
            set {
                if ((this.CbiOpeCheckerField.Equals(value) != true)) {
                    this.CbiOpeCheckerField = value;
                    this.RaisePropertyChanged("CbiOpeChecker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CbiOpeMaker {
            get {
                return this.CbiOpeMakerField;
            }
            set {
                if ((this.CbiOpeMakerField.Equals(value) != true)) {
                    this.CbiOpeMakerField = value;
                    this.RaisePropertyChanged("CbiOpeMaker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CbiPaid {
            get {
                return this.CbiPaidField;
            }
            set {
                if ((this.CbiPaidField.Equals(value) != true)) {
                    this.CbiPaidField = value;
                    this.RaisePropertyChanged("CbiPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CbiPayable {
            get {
                return this.CbiPayableField;
            }
            set {
                if ((this.CbiPayableField.Equals(value) != true)) {
                    this.CbiPayableField = value;
                    this.RaisePropertyChanged("CbiPayable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CbiRemark1 {
            get {
                return this.CbiRemark1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CbiRemark1Field, value) != true)) {
                    this.CbiRemark1Field = value;
                    this.RaisePropertyChanged("CbiRemark1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CbiRemark2 {
            get {
                return this.CbiRemark2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CbiRemark2Field, value) != true)) {
                    this.CbiRemark2Field = value;
                    this.RaisePropertyChanged("CbiRemark2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CbiStatus {
            get {
                return this.CbiStatusField;
            }
            set {
                if ((this.CbiStatusField.Equals(value) != true)) {
                    this.CbiStatusField = value;
                    this.RaisePropertyChanged("CbiStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CbiSum {
            get {
                return this.CbiSumField;
            }
            set {
                if ((this.CbiSumField.Equals(value) != true)) {
                    this.CbiSumField = value;
                    this.RaisePropertyChanged("CbiSum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchChargeQuery", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.Charge")]
    [System.SerializableAttribute()]
    public partial class BatchChargeQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BillNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BillStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BillTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ComIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DepIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Remark2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BchID {
            get {
                return this.BchIDField;
            }
            set {
                if ((this.BchIDField.Equals(value) != true)) {
                    this.BchIDField = value;
                    this.RaisePropertyChanged("BchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BillNo {
            get {
                return this.BillNoField;
            }
            set {
                if ((this.BillNoField.Equals(value) != true)) {
                    this.BillNoField = value;
                    this.RaisePropertyChanged("BillNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BillStatus {
            get {
                return this.BillStatusField;
            }
            set {
                if ((this.BillStatusField.Equals(value) != true)) {
                    this.BillStatusField = value;
                    this.RaisePropertyChanged("BillStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BillType {
            get {
                return this.BillTypeField;
            }
            set {
                if ((this.BillTypeField.Equals(value) != true)) {
                    this.BillTypeField = value;
                    this.RaisePropertyChanged("BillType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeType {
            get {
                return this.ChargeTypeField;
            }
            set {
                if ((this.ChargeTypeField.Equals(value) != true)) {
                    this.ChargeTypeField = value;
                    this.RaisePropertyChanged("ChargeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ComID {
            get {
                return this.ComIDField;
            }
            set {
                if ((this.ComIDField.Equals(value) != true)) {
                    this.ComIDField = value;
                    this.RaisePropertyChanged("ComID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DepID {
            get {
                return this.DepIDField;
            }
            set {
                if ((this.DepIDField.Equals(value) != true)) {
                    this.DepIDField = value;
                    this.RaisePropertyChanged("DepID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark2 {
            get {
                return this.Remark2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Remark2Field, value) != true)) {
                    this.Remark2Field = value;
                    this.RaisePropertyChanged("Remark2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeType {
            get {
                return this.TimeTypeField;
            }
            set {
                if ((this.TimeTypeField.Equals(value) != true)) {
                    this.TimeTypeField = value;
                    this.RaisePropertyChanged("TimeType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChargeManageProxy.IChargeManageProxy")]
    public interface IChargeManageProxy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJob", ReplyAction="http://tempuri.org/IChargeManage/SaveJobResponse")]
        string SaveJob(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJob", ReplyAction="http://tempuri.org/IChargeManage/SaveJobResponse")]
        System.Threading.Tasks.Task<string> SaveJobAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJobForPDA", ReplyAction="http://tempuri.org/IChargeManage/SaveJobForPDAResponse")]
        string SaveJobForPDA(string jobjson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJobForPDA", ReplyAction="http://tempuri.org/IChargeManage/SaveJobForPDAResponse")]
        System.Threading.Tasks.Task<string> SaveJobForPDAAsync(string jobjson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/CheckJobForPDA", ReplyAction="http://tempuri.org/IChargeManage/CheckJobForPDAResponse")]
        string CheckJobForPDA(long id, int checkerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/CheckJobForPDA", ReplyAction="http://tempuri.org/IChargeManage/CheckJobForPDAResponse")]
        System.Threading.Tasks.Task<string> CheckJobForPDAAsync(long id, int checkerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetJobByConditionsForPDA", ReplyAction="http://tempuri.org/IChargeManage/GetJobByConditionsForPDAResponse")]
        string GetJobByConditionsForPDA(string jqmfjson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetJobByConditionsForPDA", ReplyAction="http://tempuri.org/IChargeManage/GetJobByConditionsForPDAResponse")]
        System.Threading.Tasks.Task<string> GetJobByConditionsForPDAAsync(string jqmfjson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/CheckJob", ReplyAction="http://tempuri.org/IChargeManage/CheckJobResponse")]
        string CheckJob(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/CheckJob", ReplyAction="http://tempuri.org/IChargeManage/CheckJobResponse")]
        System.Threading.Tasks.Task<string> CheckJobAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/BatchCheckJob", ReplyAction="http://tempuri.org/IChargeManage/BatchCheckJobResponse")]
        string BatchCheckJob(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/BatchCheckJob", ReplyAction="http://tempuri.org/IChargeManage/BatchCheckJobResponse")]
        System.Threading.Tasks.Task<string> BatchCheckJobAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/UnCheckJob", ReplyAction="http://tempuri.org/IChargeManage/UnCheckJobResponse")]
        string UnCheckJob(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/UnCheckJob", ReplyAction="http://tempuri.org/IChargeManage/UnCheckJobResponse")]
        System.Threading.Tasks.Task<string> UnCheckJobAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/BatchUnCheckJob", ReplyAction="http://tempuri.org/IChargeManage/BatchUnCheckJobResponse")]
        string BatchUnCheckJob(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/BatchUnCheckJob", ReplyAction="http://tempuri.org/IChargeManage/BatchUnCheckJobResponse")]
        System.Threading.Tasks.Task<string> BatchUnCheckJobAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/ReturnJob", ReplyAction="http://tempuri.org/IChargeManage/ReturnJobResponse")]
        string ReturnJob(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/ReturnJob", ReplyAction="http://tempuri.org/IChargeManage/ReturnJobResponse")]
        System.Threading.Tasks.Task<string> ReturnJobAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/BatchReturnJob", ReplyAction="http://tempuri.org/IChargeManage/BatchReturnJobResponse")]
        string BatchReturnJob(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/BatchReturnJob", ReplyAction="http://tempuri.org/IChargeManage/BatchReturnJobResponse")]
        System.Threading.Tasks.Task<string> BatchReturnJobAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/InvalidJob", ReplyAction="http://tempuri.org/IChargeManage/InvalidJobResponse")]
        string InvalidJob(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/InvalidJob", ReplyAction="http://tempuri.org/IChargeManage/InvalidJobResponse")]
        System.Threading.Tasks.Task<string> InvalidJobAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetJobByConditionsPageInfo", ReplyAction="http://tempuri.org/IChargeManage/GetJobByConditionsPageInfoResponse")]
        string GetJobByConditionsPageInfo(CMST.Storage.Client.Proxy.ChargeManageProxy.JobQueryModel jqm, string queryFields, int Page, int PageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetJobByConditionsPageInfo", ReplyAction="http://tempuri.org/IChargeManage/GetJobByConditionsPageInfoResponse")]
        System.Threading.Tasks.Task<string> GetJobByConditionsPageInfoAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.JobQueryModel jqm, string queryFields, int Page, int PageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetJobByID", ReplyAction="http://tempuri.org/IChargeManage/GetJobByIDResponse")]
        string GetJobByID(long jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetJobByID", ReplyAction="http://tempuri.org/IChargeManage/GetJobByIDResponse")]
        System.Threading.Tasks.Task<string> GetJobByIDAsync(long jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetJobByBillNOAndType", ReplyAction="http://tempuri.org/IChargeManage/GetJobByBillNOAndTypeResponse")]
        string GetJobByBillNOAndType(long billNO, int billType, int depId, int makerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetJobByBillNOAndType", ReplyAction="http://tempuri.org/IChargeManage/GetJobByBillNOAndTypeResponse")]
        System.Threading.Tasks.Task<string> GetJobByBillNOAndTypeAsync(long billNO, int billType, int depId, int makerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetJobsByBillNoAndType", ReplyAction="http://tempuri.org/IChargeManage/GetJobsByBillNoAndTypeResponse")]
        string GetJobsByBillNoAndType(long billNO, int billType, int depId, int makerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetJobsByBillNoAndType", ReplyAction="http://tempuri.org/IChargeManage/GetJobsByBillNoAndTypeResponse")]
        System.Threading.Tasks.Task<string> GetJobsByBillNoAndTypeAsync(long billNO, int billType, int depId, int makerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJobMode", ReplyAction="http://tempuri.org/IChargeManage/SaveJobModeResponse")]
        string SaveJobMode(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJobMode", ReplyAction="http://tempuri.org/IChargeManage/SaveJobModeResponse")]
        System.Threading.Tasks.Task<string> SaveJobModeAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJobModeIfUse", ReplyAction="http://tempuri.org/IChargeManage/SaveJobModeIfUseResponse")]
        string SaveJobModeIfUse(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJobModeIfUse", ReplyAction="http://tempuri.org/IChargeManage/SaveJobModeIfUseResponse")]
        System.Threading.Tasks.Task<string> SaveJobModeIfUseAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetAllJobeMode", ReplyAction="http://tempuri.org/IChargeManage/GetAllJobeModeResponse")]
        string GetAllJobeMode(int cmstID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetAllJobeMode", ReplyAction="http://tempuri.org/IChargeManage/GetAllJobeModeResponse")]
        System.Threading.Tasks.Task<string> GetAllJobeModeAsync(int cmstID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetAllUseJobeMode", ReplyAction="http://tempuri.org/IChargeManage/GetAllUseJobeModeResponse")]
        string GetAllUseJobeMode(int cmstID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/GetAllUseJobeMode", ReplyAction="http://tempuri.org/IChargeManage/GetAllUseJobeModeResponse")]
        System.Threading.Tasks.Task<string> GetAllUseJobeModeAsync(int cmstID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryJobModeByCmstAndMode", ReplyAction="http://tempuri.org/IChargeManage/QueryJobModeByCmstAndModeResponse")]
        string QueryJobModeByCmstAndMode(int cmstID, string jmoMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryJobModeByCmstAndMode", ReplyAction="http://tempuri.org/IChargeManage/QueryJobModeByCmstAndModeResponse")]
        System.Threading.Tasks.Task<string> QueryJobModeByCmstAndModeAsync(int cmstID, string jmoMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJmo", ReplyAction="http://tempuri.org/IChargeManage/SaveJmoResponse")]
        string SaveJmo(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJmo", ReplyAction="http://tempuri.org/IChargeManage/SaveJmoResponse")]
        System.Threading.Tasks.Task<string> SaveJmoAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/DelJmo", ReplyAction="http://tempuri.org/IChargeManage/DelJmoResponse")]
        string DelJmo(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode> jmos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/DelJmo", ReplyAction="http://tempuri.org/IChargeManage/DelJmoResponse")]
        System.Threading.Tasks.Task<string> DelJmoAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode> jmos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/ImportJmo", ReplyAction="http://tempuri.org/IChargeManage/ImportJmoResponse")]
        string ImportJmo(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode> jmos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/ImportJmo", ReplyAction="http://tempuri.org/IChargeManage/ImportJmoResponse")]
        System.Threading.Tasks.Task<string> ImportJmoAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode> jmos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryJobTypeByCmstAndName", ReplyAction="http://tempuri.org/IChargeManage/QueryJobTypeByCmstAndNameResponse")]
        string QueryJobTypeByCmstAndName(int cmstID, string jtyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryJobTypeByCmstAndName", ReplyAction="http://tempuri.org/IChargeManage/QueryJobTypeByCmstAndNameResponse")]
        System.Threading.Tasks.Task<string> QueryJobTypeByCmstAndNameAsync(int cmstID, string jtyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJty", ReplyAction="http://tempuri.org/IChargeManage/SaveJtyResponse")]
        string SaveJty(CMST.Storage.Client.Proxy.ChargeManageProxy.JobType jty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveJty", ReplyAction="http://tempuri.org/IChargeManage/SaveJtyResponse")]
        System.Threading.Tasks.Task<string> SaveJtyAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.JobType jty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryUseJobTypeByCmst", ReplyAction="http://tempuri.org/IChargeManage/QueryUseJobTypeByCmstResponse")]
        string QueryUseJobTypeByCmst(int cmstID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryUseJobTypeByCmst", ReplyAction="http://tempuri.org/IChargeManage/QueryUseJobTypeByCmstResponse")]
        System.Threading.Tasks.Task<string> QueryUseJobTypeByCmstAsync(int cmstID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryBatchCharge", ReplyAction="http://tempuri.org/IChargeManage/QueryBatchChargeResponse")]
        string QueryBatchCharge(long bchId, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryBatchCharge", ReplyAction="http://tempuri.org/IChargeManage/QueryBatchChargeResponse")]
        System.Threading.Tasks.Task<string> QueryBatchChargeAsync(long bchId, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryBatchChargeByBillNo", ReplyAction="http://tempuri.org/IChargeManage/QueryBatchChargeByBillNoResponse")]
        string QueryBatchChargeByBillNo(long billNo, int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryBatchChargeByBillNo", ReplyAction="http://tempuri.org/IChargeManage/QueryBatchChargeByBillNoResponse")]
        System.Threading.Tasks.Task<string> QueryBatchChargeByBillNoAsync(long billNo, int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveBatchChargeTemporary", ReplyAction="http://tempuri.org/IChargeManage/SaveBatchChargeTemporaryResponse")]
        string SaveBatchChargeTemporary(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/SaveBatchChargeTemporary", ReplyAction="http://tempuri.org/IChargeManage/SaveBatchChargeTemporaryResponse")]
        System.Threading.Tasks.Task<string> SaveBatchChargeTemporaryAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/CheckBatchCharge", ReplyAction="http://tempuri.org/IChargeManage/CheckBatchChargeResponse")]
        string CheckBatchCharge(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/CheckBatchCharge", ReplyAction="http://tempuri.org/IChargeManage/CheckBatchChargeResponse")]
        System.Threading.Tasks.Task<string> CheckBatchChargeAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryBatchChargePageInfo", ReplyAction="http://tempuri.org/IChargeManage/QueryBatchChargePageInfoResponse")]
        string QueryBatchChargePageInfo(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchChargeQuery bq, string queryFields, int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/QueryBatchChargePageInfo", ReplyAction="http://tempuri.org/IChargeManage/QueryBatchChargePageInfoResponse")]
        System.Threading.Tasks.Task<string> QueryBatchChargePageInfoAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchChargeQuery bq, string queryFields, int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/UpdateBatchChargeStatus", ReplyAction="http://tempuri.org/IChargeManage/UpdateBatchChargeStatusResponse")]
        string UpdateBatchChargeStatus(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChargeManage/UpdateBatchChargeStatus", ReplyAction="http://tempuri.org/IChargeManage/UpdateBatchChargeStatusResponse")]
        System.Threading.Tasks.Task<string> UpdateBatchChargeStatusAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChargeManageProxyChannel : CMST.Storage.Client.Proxy.ChargeManageProxy.IChargeManageProxy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChargeManageProxyClient : System.ServiceModel.ClientBase<CMST.Storage.Client.Proxy.ChargeManageProxy.IChargeManageProxy>, CMST.Storage.Client.Proxy.ChargeManageProxy.IChargeManageProxy {
        
        public ChargeManageProxyClient() {
        }
        
        public ChargeManageProxyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChargeManageProxyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChargeManageProxyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChargeManageProxyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SaveJob(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb) {
            return base.Channel.SaveJob(jb);
        }
        
        public System.Threading.Tasks.Task<string> SaveJobAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb) {
            return base.Channel.SaveJobAsync(jb);
        }
        
        public string SaveJobForPDA(string jobjson) {
            return base.Channel.SaveJobForPDA(jobjson);
        }
        
        public System.Threading.Tasks.Task<string> SaveJobForPDAAsync(string jobjson) {
            return base.Channel.SaveJobForPDAAsync(jobjson);
        }
        
        public string CheckJobForPDA(long id, int checkerID) {
            return base.Channel.CheckJobForPDA(id, checkerID);
        }
        
        public System.Threading.Tasks.Task<string> CheckJobForPDAAsync(long id, int checkerID) {
            return base.Channel.CheckJobForPDAAsync(id, checkerID);
        }
        
        public string GetJobByConditionsForPDA(string jqmfjson) {
            return base.Channel.GetJobByConditionsForPDA(jqmfjson);
        }
        
        public System.Threading.Tasks.Task<string> GetJobByConditionsForPDAAsync(string jqmfjson) {
            return base.Channel.GetJobByConditionsForPDAAsync(jqmfjson);
        }
        
        public string CheckJob(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb) {
            return base.Channel.CheckJob(jb);
        }
        
        public System.Threading.Tasks.Task<string> CheckJobAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb) {
            return base.Channel.CheckJobAsync(jb);
        }
        
        public string BatchCheckJob(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs) {
            return base.Channel.BatchCheckJob(jbs);
        }
        
        public System.Threading.Tasks.Task<string> BatchCheckJobAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs) {
            return base.Channel.BatchCheckJobAsync(jbs);
        }
        
        public string UnCheckJob(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb) {
            return base.Channel.UnCheckJob(jb);
        }
        
        public System.Threading.Tasks.Task<string> UnCheckJobAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb) {
            return base.Channel.UnCheckJobAsync(jb);
        }
        
        public string BatchUnCheckJob(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs) {
            return base.Channel.BatchUnCheckJob(jbs);
        }
        
        public System.Threading.Tasks.Task<string> BatchUnCheckJobAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs) {
            return base.Channel.BatchUnCheckJobAsync(jbs);
        }
        
        public string ReturnJob(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb) {
            return base.Channel.ReturnJob(jb);
        }
        
        public System.Threading.Tasks.Task<string> ReturnJobAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb) {
            return base.Channel.ReturnJobAsync(jb);
        }
        
        public string BatchReturnJob(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs) {
            return base.Channel.BatchReturnJob(jbs);
        }
        
        public System.Threading.Tasks.Task<string> BatchReturnJobAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.Job> jbs) {
            return base.Channel.BatchReturnJobAsync(jbs);
        }
        
        public string InvalidJob(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb) {
            return base.Channel.InvalidJob(jb);
        }
        
        public System.Threading.Tasks.Task<string> InvalidJobAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.Job jb) {
            return base.Channel.InvalidJobAsync(jb);
        }
        
        public string GetJobByConditionsPageInfo(CMST.Storage.Client.Proxy.ChargeManageProxy.JobQueryModel jqm, string queryFields, int Page, int PageSize) {
            return base.Channel.GetJobByConditionsPageInfo(jqm, queryFields, Page, PageSize);
        }
        
        public System.Threading.Tasks.Task<string> GetJobByConditionsPageInfoAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.JobQueryModel jqm, string queryFields, int Page, int PageSize) {
            return base.Channel.GetJobByConditionsPageInfoAsync(jqm, queryFields, Page, PageSize);
        }
        
        public string GetJobByID(long jobId) {
            return base.Channel.GetJobByID(jobId);
        }
        
        public System.Threading.Tasks.Task<string> GetJobByIDAsync(long jobId) {
            return base.Channel.GetJobByIDAsync(jobId);
        }
        
        public string GetJobByBillNOAndType(long billNO, int billType, int depId, int makerId) {
            return base.Channel.GetJobByBillNOAndType(billNO, billType, depId, makerId);
        }
        
        public System.Threading.Tasks.Task<string> GetJobByBillNOAndTypeAsync(long billNO, int billType, int depId, int makerId) {
            return base.Channel.GetJobByBillNOAndTypeAsync(billNO, billType, depId, makerId);
        }
        
        public string GetJobsByBillNoAndType(long billNO, int billType, int depId, int makerId) {
            return base.Channel.GetJobsByBillNoAndType(billNO, billType, depId, makerId);
        }
        
        public System.Threading.Tasks.Task<string> GetJobsByBillNoAndTypeAsync(long billNO, int billType, int depId, int makerId) {
            return base.Channel.GetJobsByBillNoAndTypeAsync(billNO, billType, depId, makerId);
        }
        
        public string SaveJobMode(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo) {
            return base.Channel.SaveJobMode(jmo);
        }
        
        public System.Threading.Tasks.Task<string> SaveJobModeAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo) {
            return base.Channel.SaveJobModeAsync(jmo);
        }
        
        public string SaveJobModeIfUse(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo) {
            return base.Channel.SaveJobModeIfUse(jmo);
        }
        
        public System.Threading.Tasks.Task<string> SaveJobModeIfUseAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo) {
            return base.Channel.SaveJobModeIfUseAsync(jmo);
        }
        
        public string GetAllJobeMode(int cmstID) {
            return base.Channel.GetAllJobeMode(cmstID);
        }
        
        public System.Threading.Tasks.Task<string> GetAllJobeModeAsync(int cmstID) {
            return base.Channel.GetAllJobeModeAsync(cmstID);
        }
        
        public string GetAllUseJobeMode(int cmstID) {
            return base.Channel.GetAllUseJobeMode(cmstID);
        }
        
        public System.Threading.Tasks.Task<string> GetAllUseJobeModeAsync(int cmstID) {
            return base.Channel.GetAllUseJobeModeAsync(cmstID);
        }
        
        public string QueryJobModeByCmstAndMode(int cmstID, string jmoMode) {
            return base.Channel.QueryJobModeByCmstAndMode(cmstID, jmoMode);
        }
        
        public System.Threading.Tasks.Task<string> QueryJobModeByCmstAndModeAsync(int cmstID, string jmoMode) {
            return base.Channel.QueryJobModeByCmstAndModeAsync(cmstID, jmoMode);
        }
        
        public string SaveJmo(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo) {
            return base.Channel.SaveJmo(jmo);
        }
        
        public System.Threading.Tasks.Task<string> SaveJmoAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode jmo) {
            return base.Channel.SaveJmoAsync(jmo);
        }
        
        public string DelJmo(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode> jmos) {
            return base.Channel.DelJmo(jmos);
        }
        
        public System.Threading.Tasks.Task<string> DelJmoAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode> jmos) {
            return base.Channel.DelJmoAsync(jmos);
        }
        
        public string ImportJmo(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode> jmos) {
            return base.Channel.ImportJmo(jmos);
        }
        
        public System.Threading.Tasks.Task<string> ImportJmoAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.ChargeManageProxy.JobMode> jmos) {
            return base.Channel.ImportJmoAsync(jmos);
        }
        
        public string QueryJobTypeByCmstAndName(int cmstID, string jtyName) {
            return base.Channel.QueryJobTypeByCmstAndName(cmstID, jtyName);
        }
        
        public System.Threading.Tasks.Task<string> QueryJobTypeByCmstAndNameAsync(int cmstID, string jtyName) {
            return base.Channel.QueryJobTypeByCmstAndNameAsync(cmstID, jtyName);
        }
        
        public string SaveJty(CMST.Storage.Client.Proxy.ChargeManageProxy.JobType jty) {
            return base.Channel.SaveJty(jty);
        }
        
        public System.Threading.Tasks.Task<string> SaveJtyAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.JobType jty) {
            return base.Channel.SaveJtyAsync(jty);
        }
        
        public string QueryUseJobTypeByCmst(int cmstID) {
            return base.Channel.QueryUseJobTypeByCmst(cmstID);
        }
        
        public System.Threading.Tasks.Task<string> QueryUseJobTypeByCmstAsync(int cmstID) {
            return base.Channel.QueryUseJobTypeByCmstAsync(cmstID);
        }
        
        public string QueryBatchCharge(long bchId, int cmstId) {
            return base.Channel.QueryBatchCharge(bchId, cmstId);
        }
        
        public System.Threading.Tasks.Task<string> QueryBatchChargeAsync(long bchId, int cmstId) {
            return base.Channel.QueryBatchChargeAsync(bchId, cmstId);
        }
        
        public string QueryBatchChargeByBillNo(long billNo, int CmstId) {
            return base.Channel.QueryBatchChargeByBillNo(billNo, CmstId);
        }
        
        public System.Threading.Tasks.Task<string> QueryBatchChargeByBillNoAsync(long billNo, int CmstId) {
            return base.Channel.QueryBatchChargeByBillNoAsync(billNo, CmstId);
        }
        
        public string SaveBatchChargeTemporary(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b) {
            return base.Channel.SaveBatchChargeTemporary(b);
        }
        
        public System.Threading.Tasks.Task<string> SaveBatchChargeTemporaryAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b) {
            return base.Channel.SaveBatchChargeTemporaryAsync(b);
        }
        
        public string CheckBatchCharge(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b) {
            return base.Channel.CheckBatchCharge(b);
        }
        
        public System.Threading.Tasks.Task<string> CheckBatchChargeAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b) {
            return base.Channel.CheckBatchChargeAsync(b);
        }
        
        public string QueryBatchChargePageInfo(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchChargeQuery bq, string queryFields, int page, int pageSize) {
            return base.Channel.QueryBatchChargePageInfo(bq, queryFields, page, pageSize);
        }
        
        public System.Threading.Tasks.Task<string> QueryBatchChargePageInfoAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchChargeQuery bq, string queryFields, int page, int pageSize) {
            return base.Channel.QueryBatchChargePageInfoAsync(bq, queryFields, page, pageSize);
        }
        
        public string UpdateBatchChargeStatus(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b) {
            return base.Channel.UpdateBatchChargeStatus(b);
        }
        
        public System.Threading.Tasks.Task<string> UpdateBatchChargeStatusAsync(CMST.Storage.Client.Proxy.ChargeManageProxy.BatchCharge b) {
            return base.Channel.UpdateBatchChargeStatusAsync(b);
        }
    }
}
