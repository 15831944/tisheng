//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMST.Storage.Client.Proxy.ReportManageProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectModel", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.ReportServer.Data.ReportMana" +
        "ge")]
    [System.SerializableAttribute()]
    public partial class SelectModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArrivetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliverytypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TcompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TcompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arrivetype {
            get {
                return this.ArrivetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrivetypeField, value) != true)) {
                    this.ArrivetypeField = value;
                    this.RaisePropertyChanged("Arrivetype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Deliverytype {
            get {
                return this.DeliverytypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliverytypeField, value) != true)) {
                    this.DeliverytypeField = value;
                    this.RaisePropertyChanged("Deliverytype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Goodname {
            get {
                return this.GoodnameField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodnameField, value) != true)) {
                    this.GoodnameField = value;
                    this.RaisePropertyChanged("Goodname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Man {
            get {
                return this.ManField;
            }
            set {
                if ((object.ReferenceEquals(this.ManField, value) != true)) {
                    this.ManField = value;
                    this.RaisePropertyChanged("Man");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Package {
            get {
                return this.PackageField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageField, value) != true)) {
                    this.PackageField = value;
                    this.RaisePropertyChanged("Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Spce {
            get {
                return this.SpceField;
            }
            set {
                if ((object.ReferenceEquals(this.SpceField, value) != true)) {
                    this.SpceField = value;
                    this.RaisePropertyChanged("Spce");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TcompanyId {
            get {
                return this.TcompanyIdField;
            }
            set {
                if ((this.TcompanyIdField.Equals(value) != true)) {
                    this.TcompanyIdField = value;
                    this.RaisePropertyChanged("TcompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TcompanyName {
            get {
                return this.TcompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TcompanyNameField, value) != true)) {
                    this.TcompanyNameField = value;
                    this.RaisePropertyChanged("TcompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryStockHistoryModel", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.ReportServer.Data")]
    [System.SerializableAttribute()]
    public partial class QueryStockHistoryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConfirmTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DepIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GraIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Level1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Level2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ManIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PacIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PnaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SpeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConfirmTime {
            get {
                return this.ConfirmTimeField;
            }
            set {
                if ((this.ConfirmTimeField.Equals(value) != true)) {
                    this.ConfirmTimeField = value;
                    this.RaisePropertyChanged("ConfirmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DepId {
            get {
                return this.DepIdField;
            }
            set {
                if ((this.DepIdField.Equals(value) != true)) {
                    this.DepIdField = value;
                    this.RaisePropertyChanged("DepId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GraID {
            get {
                return this.GraIDField;
            }
            set {
                if ((this.GraIDField.Equals(value) != true)) {
                    this.GraIDField = value;
                    this.RaisePropertyChanged("GraID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Level1 {
            get {
                return this.Level1Field;
            }
            set {
                if ((this.Level1Field.Equals(value) != true)) {
                    this.Level1Field = value;
                    this.RaisePropertyChanged("Level1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Level2 {
            get {
                return this.Level2Field;
            }
            set {
                if ((this.Level2Field.Equals(value) != true)) {
                    this.Level2Field = value;
                    this.RaisePropertyChanged("Level2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ManID {
            get {
                return this.ManIDField;
            }
            set {
                if ((this.ManIDField.Equals(value) != true)) {
                    this.ManIDField = value;
                    this.RaisePropertyChanged("ManID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PacId {
            get {
                return this.PacIdField;
            }
            set {
                if ((this.PacIdField.Equals(value) != true)) {
                    this.PacIdField = value;
                    this.RaisePropertyChanged("PacId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PnaId {
            get {
                return this.PnaIdField;
            }
            set {
                if ((this.PnaIdField.Equals(value) != true)) {
                    this.PnaIdField = value;
                    this.RaisePropertyChanged("PnaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RarId {
            get {
                return this.RarIdField;
            }
            set {
                if ((this.RarIdField.Equals(value) != true)) {
                    this.RarIdField = value;
                    this.RaisePropertyChanged("RarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SpeID {
            get {
                return this.SpeIDField;
            }
            set {
                if ((this.SpeIDField.Equals(value) != true)) {
                    this.SpeIDField = value;
                    this.RaisePropertyChanged("SpeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockHistory", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.ReportServer.Data.ReportMana" +
        "ge")]
    [System.SerializableAttribute()]
    public partial class StockHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodsNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkuNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoodsName {
            get {
                return this.GoodsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodsNameField, value) != true)) {
                    this.GoodsNameField = value;
                    this.RaisePropertyChanged("GoodsName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Num {
            get {
                return this.NumField;
            }
            set {
                if ((this.NumField.Equals(value) != true)) {
                    this.NumField = value;
                    this.RaisePropertyChanged("Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkuName {
            get {
                return this.SkuNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SkuNameField, value) != true)) {
                    this.SkuNameField = value;
                    this.RaisePropertyChanged("SkuName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryStockBalanceModel", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.ReportServer.Data.ReportMana" +
        "ge")]
    [System.SerializableAttribute()]
    public partial class QueryStockBalanceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConfirmTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GraIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ManIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PacIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PnaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SpeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConfirmTime {
            get {
                return this.ConfirmTimeField;
            }
            set {
                if ((this.ConfirmTimeField.Equals(value) != true)) {
                    this.ConfirmTimeField = value;
                    this.RaisePropertyChanged("ConfirmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GraID {
            get {
                return this.GraIDField;
            }
            set {
                if ((this.GraIDField.Equals(value) != true)) {
                    this.GraIDField = value;
                    this.RaisePropertyChanged("GraID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ManID {
            get {
                return this.ManIDField;
            }
            set {
                if ((this.ManIDField.Equals(value) != true)) {
                    this.ManIDField = value;
                    this.RaisePropertyChanged("ManID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PacId {
            get {
                return this.PacIdField;
            }
            set {
                if ((this.PacIdField.Equals(value) != true)) {
                    this.PacIdField = value;
                    this.RaisePropertyChanged("PacId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PnaId {
            get {
                return this.PnaIdField;
            }
            set {
                if ((this.PnaIdField.Equals(value) != true)) {
                    this.PnaIdField = value;
                    this.RaisePropertyChanged("PnaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SpeID {
            get {
                return this.SpeIDField;
            }
            set {
                if ((this.SpeIDField.Equals(value) != true)) {
                    this.SpeIDField = value;
                    this.RaisePropertyChanged("SpeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockBalance", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.ReportServer.Data.ReportMana" +
        "ge")]
    [System.SerializableAttribute()]
    public partial class StockBalance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Num {
            get {
                return this.NumField;
            }
            set {
                if ((this.NumField.Equals(value) != true)) {
                    this.NumField = value;
                    this.RaisePropertyChanged("Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoodsFlowRank", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.ReportServer.Data.ReportMana" +
        "ge")]
    [System.SerializableAttribute()]
    public partial class GoodsFlowRank : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InTotalANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OutTotalANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThroughPutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InTotalAN {
            get {
                return this.InTotalANField;
            }
            set {
                if ((this.InTotalANField.Equals(value) != true)) {
                    this.InTotalANField = value;
                    this.RaisePropertyChanged("InTotalAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OutTotalAN {
            get {
                return this.OutTotalANField;
            }
            set {
                if ((this.OutTotalANField.Equals(value) != true)) {
                    this.OutTotalANField = value;
                    this.RaisePropertyChanged("OutTotalAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ThroughPut {
            get {
                return this.ThroughPutField;
            }
            set {
                if ((this.ThroughPutField.Equals(value) != true)) {
                    this.ThroughPutField = value;
                    this.RaisePropertyChanged("ThroughPut");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReportManageProxy.IReportManageProxy")]
    public interface IReportManageProxy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetReportTest", ReplyAction="http://tempuri.org/IReportManage/GetReportTestResponse")]
        System.Data.DataSet GetReportTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetReportTest", ReplyAction="http://tempuri.org/IReportManage/GetReportTestResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetReportTestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetReportCountTest", ReplyAction="http://tempuri.org/IReportManage/GetReportCountTestResponse")]
        int GetReportCountTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetReportCountTest", ReplyAction="http://tempuri.org/IReportManage/GetReportCountTestResponse")]
        System.Threading.Tasks.Task<int> GetReportCountTestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/TestReportStatus", ReplyAction="http://tempuri.org/IReportManage/TestReportStatusResponse")]
        string TestReportStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/TestReportStatus", ReplyAction="http://tempuri.org/IReportManage/TestReportStatusResponse")]
        System.Threading.Tasks.Task<string> TestReportStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetThroughputRowCount", ReplyAction="http://tempuri.org/IReportManage/GetThroughputRowCountResponse")]
        int GetThroughputRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetThroughputRowCount", ReplyAction="http://tempuri.org/IReportManage/GetThroughputRowCountResponse")]
        System.Threading.Tasks.Task<int> GetThroughputRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetThroughputReport", ReplyAction="http://tempuri.org/IReportManage/GetThroughputReportResponse")]
        System.Data.DataSet GetThroughputReport(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetThroughputReport", ReplyAction="http://tempuri.org/IReportManage/GetThroughputReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetThroughputReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetStorageDetailRowCount", ReplyAction="http://tempuri.org/IReportManage/GetStorageDetailRowCountResponse")]
        int GetStorageDetailRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetStorageDetailRowCount", ReplyAction="http://tempuri.org/IReportManage/GetStorageDetailRowCountResponse")]
        System.Threading.Tasks.Task<int> GetStorageDetailRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetStorageDetailReport", ReplyAction="http://tempuri.org/IReportManage/GetStorageDetailReportResponse")]
        System.Data.DataSet GetStorageDetailReport(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetStorageDetailReport", ReplyAction="http://tempuri.org/IReportManage/GetStorageDetailReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStorageDetailReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetDeliveryDetailRowCount", ReplyAction="http://tempuri.org/IReportManage/GetDeliveryDetailRowCountResponse")]
        int GetDeliveryDetailRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetDeliveryDetailRowCount", ReplyAction="http://tempuri.org/IReportManage/GetDeliveryDetailRowCountResponse")]
        System.Threading.Tasks.Task<int> GetDeliveryDetailRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetDeliveryDetailReport", ReplyAction="http://tempuri.org/IReportManage/GetDeliveryDetailReportResponse")]
        System.Data.DataSet GetDeliveryDetailReport(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetDeliveryDetailReport", ReplyAction="http://tempuri.org/IReportManage/GetDeliveryDetailReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDeliveryDetailReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetInOutDetailRowCount", ReplyAction="http://tempuri.org/IReportManage/GetInOutDetailRowCountResponse")]
        int GetInOutDetailRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetInOutDetailRowCount", ReplyAction="http://tempuri.org/IReportManage/GetInOutDetailRowCountResponse")]
        System.Threading.Tasks.Task<int> GetInOutDetailRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetInOutDetailReport", ReplyAction="http://tempuri.org/IReportManage/GetInOutDetailReportResponse")]
        System.Data.DataSet GetInOutDetailReport(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GetInOutDetailReport", ReplyAction="http://tempuri.org/IReportManage/GetInOutDetailReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetInOutDetailReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryStockHistoryRowCount", ReplyAction="http://tempuri.org/IReportManage/QueryStockHistoryRowCountResponse")]
        int QueryStockHistoryRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockHistoryModel qshm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryStockHistoryRowCount", ReplyAction="http://tempuri.org/IReportManage/QueryStockHistoryRowCountResponse")]
        System.Threading.Tasks.Task<int> QueryStockHistoryRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockHistoryModel qshm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryStockHistoryDetailReport", ReplyAction="http://tempuri.org/IReportManage/QueryStockHistoryDetailReportResponse")]
        string QueryStockHistoryDetailReport(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockHistoryModel qshm, int PageSize, int Page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryStockHistoryDetailReport", ReplyAction="http://tempuri.org/IReportManage/QueryStockHistoryDetailReportResponse")]
        System.Threading.Tasks.Task<string> QueryStockHistoryDetailReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockHistoryModel qshm, int PageSize, int Page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/StockHistoryClass", ReplyAction="http://tempuri.org/IReportManage/StockHistoryClassResponse")]
        CMST.Storage.Client.Proxy.ReportManageProxy.StockHistory StockHistoryClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/StockHistoryClass", ReplyAction="http://tempuri.org/IReportManage/StockHistoryClassResponse")]
        System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.ReportManageProxy.StockHistory> StockHistoryClassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryStockBalanceRowCount", ReplyAction="http://tempuri.org/IReportManage/QueryStockBalanceRowCountResponse")]
        int QueryStockBalanceRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockBalanceModel qsbm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryStockBalanceRowCount", ReplyAction="http://tempuri.org/IReportManage/QueryStockBalanceRowCountResponse")]
        System.Threading.Tasks.Task<int> QueryStockBalanceRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockBalanceModel qsbm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryStockBalanceDetailReport", ReplyAction="http://tempuri.org/IReportManage/QueryStockBalanceDetailReportResponse")]
        string QueryStockBalanceDetailReport(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockBalanceModel qsbm, int PageSize, int Page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryStockBalanceDetailReport", ReplyAction="http://tempuri.org/IReportManage/QueryStockBalanceDetailReportResponse")]
        System.Threading.Tasks.Task<string> QueryStockBalanceDetailReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockBalanceModel qsbm, int PageSize, int Page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/StockBalanceClass", ReplyAction="http://tempuri.org/IReportManage/StockBalanceClassResponse")]
        CMST.Storage.Client.Proxy.ReportManageProxy.StockBalance StockBalanceClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/StockBalanceClass", ReplyAction="http://tempuri.org/IReportManage/StockBalanceClassResponse")]
        System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.ReportManageProxy.StockBalance> StockBalanceClassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryGoodsFlowRankRowCount", ReplyAction="http://tempuri.org/IReportManage/QueryGoodsFlowRankRowCountResponse")]
        int QueryGoodsFlowRankRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel sm, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryGoodsFlowRankRowCount", ReplyAction="http://tempuri.org/IReportManage/QueryGoodsFlowRankRowCountResponse")]
        System.Threading.Tasks.Task<int> QueryGoodsFlowRankRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel sm, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryGoodsFlowRankReport", ReplyAction="http://tempuri.org/IReportManage/QueryGoodsFlowRankReportResponse")]
        string QueryGoodsFlowRankReport(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel sm, int cmstId, int PageSize, int Page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/QueryGoodsFlowRankReport", ReplyAction="http://tempuri.org/IReportManage/QueryGoodsFlowRankReportResponse")]
        System.Threading.Tasks.Task<string> QueryGoodsFlowRankReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel sm, int cmstId, int PageSize, int Page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GoodsFlowRankClass", ReplyAction="http://tempuri.org/IReportManage/GoodsFlowRankClassResponse")]
        CMST.Storage.Client.Proxy.ReportManageProxy.GoodsFlowRank GoodsFlowRankClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManage/GoodsFlowRankClass", ReplyAction="http://tempuri.org/IReportManage/GoodsFlowRankClassResponse")]
        System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.ReportManageProxy.GoodsFlowRank> GoodsFlowRankClassAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportManageProxyChannel : CMST.Storage.Client.Proxy.ReportManageProxy.IReportManageProxy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportManageProxyClient : System.ServiceModel.ClientBase<CMST.Storage.Client.Proxy.ReportManageProxy.IReportManageProxy>, CMST.Storage.Client.Proxy.ReportManageProxy.IReportManageProxy {
        
        public ReportManageProxyClient() {
        }
        
        public ReportManageProxyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportManageProxyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManageProxyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManageProxyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetReportTest() {
            return base.Channel.GetReportTest();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetReportTestAsync() {
            return base.Channel.GetReportTestAsync();
        }
        
        public int GetReportCountTest() {
            return base.Channel.GetReportCountTest();
        }
        
        public System.Threading.Tasks.Task<int> GetReportCountTestAsync() {
            return base.Channel.GetReportCountTestAsync();
        }
        
        public string TestReportStatus() {
            return base.Channel.TestReportStatus();
        }
        
        public System.Threading.Tasks.Task<string> TestReportStatusAsync() {
            return base.Channel.TestReportStatusAsync();
        }
        
        public int GetThroughputRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId) {
            return base.Channel.GetThroughputRowCount(selectModel, cmstId);
        }
        
        public System.Threading.Tasks.Task<int> GetThroughputRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId) {
            return base.Channel.GetThroughputRowCountAsync(selectModel, cmstId);
        }
        
        public System.Data.DataSet GetThroughputReport(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId) {
            return base.Channel.GetThroughputReport(selectModel, pagesize, beginrow, cmstId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetThroughputReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId) {
            return base.Channel.GetThroughputReportAsync(selectModel, pagesize, beginrow, cmstId);
        }
        
        public int GetStorageDetailRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId) {
            return base.Channel.GetStorageDetailRowCount(selectModel, cmstId);
        }
        
        public System.Threading.Tasks.Task<int> GetStorageDetailRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId) {
            return base.Channel.GetStorageDetailRowCountAsync(selectModel, cmstId);
        }
        
        public System.Data.DataSet GetStorageDetailReport(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId) {
            return base.Channel.GetStorageDetailReport(selectModel, pagesize, beginrow, cmstId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStorageDetailReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId) {
            return base.Channel.GetStorageDetailReportAsync(selectModel, pagesize, beginrow, cmstId);
        }
        
        public int GetDeliveryDetailRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId) {
            return base.Channel.GetDeliveryDetailRowCount(selectModel, cmstId);
        }
        
        public System.Threading.Tasks.Task<int> GetDeliveryDetailRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId) {
            return base.Channel.GetDeliveryDetailRowCountAsync(selectModel, cmstId);
        }
        
        public System.Data.DataSet GetDeliveryDetailReport(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId) {
            return base.Channel.GetDeliveryDetailReport(selectModel, pagesize, beginrow, cmstId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDeliveryDetailReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId) {
            return base.Channel.GetDeliveryDetailReportAsync(selectModel, pagesize, beginrow, cmstId);
        }
        
        public int GetInOutDetailRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId) {
            return base.Channel.GetInOutDetailRowCount(selectModel, cmstId);
        }
        
        public System.Threading.Tasks.Task<int> GetInOutDetailRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int cmstId) {
            return base.Channel.GetInOutDetailRowCountAsync(selectModel, cmstId);
        }
        
        public System.Data.DataSet GetInOutDetailReport(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId) {
            return base.Channel.GetInOutDetailReport(selectModel, pagesize, beginrow, cmstId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetInOutDetailReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel selectModel, int pagesize, int beginrow, int cmstId) {
            return base.Channel.GetInOutDetailReportAsync(selectModel, pagesize, beginrow, cmstId);
        }
        
        public int QueryStockHistoryRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockHistoryModel qshm) {
            return base.Channel.QueryStockHistoryRowCount(qshm);
        }
        
        public System.Threading.Tasks.Task<int> QueryStockHistoryRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockHistoryModel qshm) {
            return base.Channel.QueryStockHistoryRowCountAsync(qshm);
        }
        
        public string QueryStockHistoryDetailReport(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockHistoryModel qshm, int PageSize, int Page) {
            return base.Channel.QueryStockHistoryDetailReport(qshm, PageSize, Page);
        }
        
        public System.Threading.Tasks.Task<string> QueryStockHistoryDetailReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockHistoryModel qshm, int PageSize, int Page) {
            return base.Channel.QueryStockHistoryDetailReportAsync(qshm, PageSize, Page);
        }
        
        public CMST.Storage.Client.Proxy.ReportManageProxy.StockHistory StockHistoryClass() {
            return base.Channel.StockHistoryClass();
        }
        
        public System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.ReportManageProxy.StockHistory> StockHistoryClassAsync() {
            return base.Channel.StockHistoryClassAsync();
        }
        
        public int QueryStockBalanceRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockBalanceModel qsbm) {
            return base.Channel.QueryStockBalanceRowCount(qsbm);
        }
        
        public System.Threading.Tasks.Task<int> QueryStockBalanceRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockBalanceModel qsbm) {
            return base.Channel.QueryStockBalanceRowCountAsync(qsbm);
        }
        
        public string QueryStockBalanceDetailReport(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockBalanceModel qsbm, int PageSize, int Page) {
            return base.Channel.QueryStockBalanceDetailReport(qsbm, PageSize, Page);
        }
        
        public System.Threading.Tasks.Task<string> QueryStockBalanceDetailReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.QueryStockBalanceModel qsbm, int PageSize, int Page) {
            return base.Channel.QueryStockBalanceDetailReportAsync(qsbm, PageSize, Page);
        }
        
        public CMST.Storage.Client.Proxy.ReportManageProxy.StockBalance StockBalanceClass() {
            return base.Channel.StockBalanceClass();
        }
        
        public System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.ReportManageProxy.StockBalance> StockBalanceClassAsync() {
            return base.Channel.StockBalanceClassAsync();
        }
        
        public int QueryGoodsFlowRankRowCount(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel sm, int cmstId) {
            return base.Channel.QueryGoodsFlowRankRowCount(sm, cmstId);
        }
        
        public System.Threading.Tasks.Task<int> QueryGoodsFlowRankRowCountAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel sm, int cmstId) {
            return base.Channel.QueryGoodsFlowRankRowCountAsync(sm, cmstId);
        }
        
        public string QueryGoodsFlowRankReport(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel sm, int cmstId, int PageSize, int Page) {
            return base.Channel.QueryGoodsFlowRankReport(sm, cmstId, PageSize, Page);
        }
        
        public System.Threading.Tasks.Task<string> QueryGoodsFlowRankReportAsync(CMST.Storage.Client.Proxy.ReportManageProxy.SelectModel sm, int cmstId, int PageSize, int Page) {
            return base.Channel.QueryGoodsFlowRankReportAsync(sm, cmstId, PageSize, Page);
        }
        
        public CMST.Storage.Client.Proxy.ReportManageProxy.GoodsFlowRank GoodsFlowRankClass() {
            return base.Channel.GoodsFlowRankClass();
        }
        
        public System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.ReportManageProxy.GoodsFlowRank> GoodsFlowRankClassAsync() {
            return base.Channel.GoodsFlowRankClassAsync();
        }
    }
}
