//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMST.Storage.Client.Proxy.BaseManageProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.BaseManage")]
    [System.SerializableAttribute()]
    public partial class DepartmentEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeptIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeptNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstId {
            get {
                return this.CmstIdField;
            }
            set {
                if ((this.CmstIdField.Equals(value) != true)) {
                    this.CmstIdField = value;
                    this.RaisePropertyChanged("CmstId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmstName {
            get {
                return this.CmstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CmstNameField, value) != true)) {
                    this.CmstNameField = value;
                    this.RaisePropertyChanged("CmstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeptId {
            get {
                return this.DeptIdField;
            }
            set {
                if ((this.DeptIdField.Equals(value) != true)) {
                    this.DeptIdField = value;
                    this.RaisePropertyChanged("DeptId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeptName {
            get {
                return this.DeptNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeptNameField, value) != true)) {
                    this.DeptNameField = value;
                    this.RaisePropertyChanged("DeptName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseStatus {
            get {
                return this.UseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.UseStatusField, value) != true)) {
                    this.UseStatusField = value;
                    this.RaisePropertyChanged("UseStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperatorEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.BaseManage")]
    [System.SerializableAttribute()]
    public partial class OperatorEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeptIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfSysAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JtyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JtyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CMST.Storage.Client.Proxy.BaseManageProxy.RoleEntity OperatorRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.BaseManageProxy.ReservoirAreaEntity> RaesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TempTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmstName {
            get {
                return this.CmstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CmstNameField, value) != true)) {
                    this.CmstNameField = value;
                    this.RaisePropertyChanged("CmstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartName {
            get {
                return this.DepartNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartNameField, value) != true)) {
                    this.DepartNameField = value;
                    this.RaisePropertyChanged("DepartName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeptId {
            get {
                return this.DeptIdField;
            }
            set {
                if ((this.DeptIdField.Equals(value) != true)) {
                    this.DeptIdField = value;
                    this.RaisePropertyChanged("DeptId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfSysAccount {
            get {
                return this.IfSysAccountField;
            }
            set {
                if ((this.IfSysAccountField.Equals(value) != true)) {
                    this.IfSysAccountField = value;
                    this.RaisePropertyChanged("IfSysAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JtyId {
            get {
                return this.JtyIdField;
            }
            set {
                if ((this.JtyIdField.Equals(value) != true)) {
                    this.JtyIdField = value;
                    this.RaisePropertyChanged("JtyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JtyName {
            get {
                return this.JtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JtyNameField, value) != true)) {
                    this.JtyNameField = value;
                    this.RaisePropertyChanged("JtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperatorID {
            get {
                return this.OperatorIDField;
            }
            set {
                if ((this.OperatorIDField.Equals(value) != true)) {
                    this.OperatorIDField = value;
                    this.RaisePropertyChanged("OperatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CMST.Storage.Client.Proxy.BaseManageProxy.RoleEntity OperatorRole {
            get {
                return this.OperatorRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorRoleField, value) != true)) {
                    this.OperatorRoleField = value;
                    this.RaisePropertyChanged("OperatorRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.BaseManageProxy.ReservoirAreaEntity> Raes {
            get {
                return this.RaesField;
            }
            set {
                if ((object.ReferenceEquals(this.RaesField, value) != true)) {
                    this.RaesField = value;
                    this.RaisePropertyChanged("Raes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TempTime {
            get {
                return this.TempTimeField;
            }
            set {
                if ((this.TempTimeField.Equals(value) != true)) {
                    this.TempTimeField = value;
                    this.RaisePropertyChanged("TempTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseStatus {
            get {
                return this.UseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.UseStatusField, value) != true)) {
                    this.UseStatusField = value;
                    this.RaisePropertyChanged("UseStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.BaseManage")]
    [System.SerializableAttribute()]
    public partial class RoleEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CsyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.BaseManageProxy.RoleOperations> RosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CsyID {
            get {
                return this.CsyIDField;
            }
            set {
                if ((this.CsyIDField.Equals(value) != true)) {
                    this.CsyIDField = value;
                    this.RaisePropertyChanged("CsyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.BaseManageProxy.RoleOperations> Ros {
            get {
                return this.RosField;
            }
            set {
                if ((object.ReferenceEquals(this.RosField, value) != true)) {
                    this.RosField = value;
                    this.RaisePropertyChanged("Ros");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReservoirAreaEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.BaseManage")]
    [System.SerializableAttribute()]
    public partial class ReservoirAreaEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RarIfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RarRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservoirAreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservoirAreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservoirAreaNatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StorageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.BaseManageProxy.DepositPlace_Model> galField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperatorID {
            get {
                return this.OperatorIDField;
            }
            set {
                if ((this.OperatorIDField.Equals(value) != true)) {
                    this.OperatorIDField = value;
                    this.RaisePropertyChanged("OperatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RarID {
            get {
                return this.RarIDField;
            }
            set {
                if ((this.RarIDField.Equals(value) != true)) {
                    this.RarIDField = value;
                    this.RaisePropertyChanged("RarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RarIfUse {
            get {
                return this.RarIfUseField;
            }
            set {
                if ((this.RarIfUseField.Equals(value) != true)) {
                    this.RarIfUseField = value;
                    this.RaisePropertyChanged("RarIfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RarRemark {
            get {
                return this.RarRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RarRemarkField, value) != true)) {
                    this.RarRemarkField = value;
                    this.RaisePropertyChanged("RarRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservoirAreaID {
            get {
                return this.ReservoirAreaIDField;
            }
            set {
                if ((this.ReservoirAreaIDField.Equals(value) != true)) {
                    this.ReservoirAreaIDField = value;
                    this.RaisePropertyChanged("ReservoirAreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReservoirAreaName {
            get {
                return this.ReservoirAreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservoirAreaNameField, value) != true)) {
                    this.ReservoirAreaNameField = value;
                    this.RaisePropertyChanged("ReservoirAreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReservoirAreaNature {
            get {
                return this.ReservoirAreaNatureField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservoirAreaNatureField, value) != true)) {
                    this.ReservoirAreaNatureField = value;
                    this.RaisePropertyChanged("ReservoirAreaNature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StorageID {
            get {
                return this.StorageIDField;
            }
            set {
                if ((this.StorageIDField.Equals(value) != true)) {
                    this.StorageIDField = value;
                    this.RaisePropertyChanged("StorageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageName {
            get {
                return this.StorageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageNameField, value) != true)) {
                    this.StorageNameField = value;
                    this.RaisePropertyChanged("StorageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.BaseManageProxy.DepositPlace_Model> gal {
            get {
                return this.galField;
            }
            set {
                if ((object.ReferenceEquals(this.galField, value) != true)) {
                    this.galField = value;
                    this.RaisePropertyChanged("gal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleOperations", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.BaseManage")]
    [System.SerializableAttribute()]
    public partial class RoleOperations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmstName {
            get {
                return this.CmstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CmstNameField, value) != true)) {
                    this.CmstNameField = value;
                    this.RaisePropertyChanged("CmstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperationCode {
            get {
                return this.OperationCodeField;
            }
            set {
                if ((this.OperationCodeField.Equals(value) != true)) {
                    this.OperationCodeField = value;
                    this.RaisePropertyChanged("OperationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperationID {
            get {
                return this.OperationIDField;
            }
            set {
                if ((this.OperationIDField.Equals(value) != true)) {
                    this.OperationIDField = value;
                    this.RaisePropertyChanged("OperationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationName {
            get {
                return this.OperationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationNameField, value) != true)) {
                    this.OperationNameField = value;
                    this.RaisePropertyChanged("OperationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositPlace_Model", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.BaseManage")]
    [System.SerializableAttribute()]
    public partial class DepositPlace_Model : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Gal_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Gal_GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Gal_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Gal_IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Gal_Level1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Gal_Level2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Gal_Level3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Gal_Level4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Gal_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Gal_Rar_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Gal_SuperiorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.BaseManageProxy.DepositPlace_Model> insField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gal_Description {
            get {
                return this.Gal_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Gal_DescriptionField, value) != true)) {
                    this.Gal_DescriptionField = value;
                    this.RaisePropertyChanged("Gal_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gal_Grade {
            get {
                return this.Gal_GradeField;
            }
            set {
                if ((this.Gal_GradeField.Equals(value) != true)) {
                    this.Gal_GradeField = value;
                    this.RaisePropertyChanged("Gal_Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gal_ID {
            get {
                return this.Gal_IDField;
            }
            set {
                if ((this.Gal_IDField.Equals(value) != true)) {
                    this.Gal_IDField = value;
                    this.RaisePropertyChanged("Gal_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gal_IfUse {
            get {
                return this.Gal_IfUseField;
            }
            set {
                if ((this.Gal_IfUseField.Equals(value) != true)) {
                    this.Gal_IfUseField = value;
                    this.RaisePropertyChanged("Gal_IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gal_Level1 {
            get {
                return this.Gal_Level1Field;
            }
            set {
                if ((this.Gal_Level1Field.Equals(value) != true)) {
                    this.Gal_Level1Field = value;
                    this.RaisePropertyChanged("Gal_Level1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gal_Level2 {
            get {
                return this.Gal_Level2Field;
            }
            set {
                if ((this.Gal_Level2Field.Equals(value) != true)) {
                    this.Gal_Level2Field = value;
                    this.RaisePropertyChanged("Gal_Level2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gal_Level3 {
            get {
                return this.Gal_Level3Field;
            }
            set {
                if ((this.Gal_Level3Field.Equals(value) != true)) {
                    this.Gal_Level3Field = value;
                    this.RaisePropertyChanged("Gal_Level3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gal_Level4 {
            get {
                return this.Gal_Level4Field;
            }
            set {
                if ((this.Gal_Level4Field.Equals(value) != true)) {
                    this.Gal_Level4Field = value;
                    this.RaisePropertyChanged("Gal_Level4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gal_Name {
            get {
                return this.Gal_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Gal_NameField, value) != true)) {
                    this.Gal_NameField = value;
                    this.RaisePropertyChanged("Gal_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gal_Rar_Id {
            get {
                return this.Gal_Rar_IdField;
            }
            set {
                if ((this.Gal_Rar_IdField.Equals(value) != true)) {
                    this.Gal_Rar_IdField = value;
                    this.RaisePropertyChanged("Gal_Rar_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gal_Superior {
            get {
                return this.Gal_SuperiorField;
            }
            set {
                if ((this.Gal_SuperiorField.Equals(value) != true)) {
                    this.Gal_SuperiorField = value;
                    this.RaisePropertyChanged("Gal_Superior");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.BaseManageProxy.DepositPlace_Model> ins {
            get {
                return this.insField;
            }
            set {
                if ((object.ReferenceEquals(this.insField, value) != true)) {
                    this.insField = value;
                    this.RaisePropertyChanged("ins");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyOperatorEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.BaseManage")]
    [System.SerializableAttribute()]
    public partial class CompanyOperatorEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BindStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfBindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TempTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BindStatus {
            get {
                return this.BindStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BindStatusField, value) != true)) {
                    this.BindStatusField = value;
                    this.RaisePropertyChanged("BindStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmstName {
            get {
                return this.CmstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CmstNameField, value) != true)) {
                    this.CmstNameField = value;
                    this.RaisePropertyChanged("CmstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfBind {
            get {
                return this.IfBindField;
            }
            set {
                if ((this.IfBindField.Equals(value) != true)) {
                    this.IfBindField = value;
                    this.RaisePropertyChanged("IfBind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperatorID {
            get {
                return this.OperatorIDField;
            }
            set {
                if ((this.OperatorIDField.Equals(value) != true)) {
                    this.OperatorIDField = value;
                    this.RaisePropertyChanged("OperatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TempTime {
            get {
                return this.TempTimeField;
            }
            set {
                if ((this.TempTimeField.Equals(value) != true)) {
                    this.TempTimeField = value;
                    this.RaisePropertyChanged("TempTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqFlag {
            get {
                return this.UniqFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqFlagField, value) != true)) {
                    this.UniqFlagField = value;
                    this.RaisePropertyChanged("UniqFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseStatus {
            get {
                return this.UseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.UseStatusField, value) != true)) {
                    this.UseStatusField = value;
                    this.RaisePropertyChanged("UseStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.BaseManage")]
    [System.SerializableAttribute()]
    public partial class OrganizationEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CmstIfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmstNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CmstIfUse {
            get {
                return this.CmstIfUseField;
            }
            set {
                if ((this.CmstIfUseField.Equals(value) != true)) {
                    this.CmstIfUseField = value;
                    this.RaisePropertyChanged("CmstIfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmstName {
            get {
                return this.CmstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CmstNameField, value) != true)) {
                    this.CmstNameField = value;
                    this.RaisePropertyChanged("CmstName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.BaseManage")]
    [System.SerializableAttribute()]
    public partial class StorageEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.BaseManageProxy.ReservoirAreaEntity> resField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageID {
            get {
                return this.StorageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageIDField, value) != true)) {
                    this.StorageIDField = value;
                    this.RaisePropertyChanged("StorageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageName {
            get {
                return this.StorageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageNameField, value) != true)) {
                    this.StorageNameField = value;
                    this.RaisePropertyChanged("StorageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.BaseManageProxy.ReservoirAreaEntity> res {
            get {
                return this.resField;
            }
            set {
                if ((object.ReferenceEquals(this.resField, value) != true)) {
                    this.resField = value;
                    this.RaisePropertyChanged("res");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArrivalMode", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.InStore")]
    [System.SerializableAttribute()]
    public partial class ArrivalMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmoCmstIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AmoIfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmoModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmoRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmoSwaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmoSwaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmoUseStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmoCmstId {
            get {
                return this.AmoCmstIdField;
            }
            set {
                if ((this.AmoCmstIdField.Equals(value) != true)) {
                    this.AmoCmstIdField = value;
                    this.RaisePropertyChanged("AmoCmstId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmoId {
            get {
                return this.AmoIdField;
            }
            set {
                if ((this.AmoIdField.Equals(value) != true)) {
                    this.AmoIdField = value;
                    this.RaisePropertyChanged("AmoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AmoIfUse {
            get {
                return this.AmoIfUseField;
            }
            set {
                if ((this.AmoIfUseField.Equals(value) != true)) {
                    this.AmoIfUseField = value;
                    this.RaisePropertyChanged("AmoIfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmoMode {
            get {
                return this.AmoModeField;
            }
            set {
                if ((object.ReferenceEquals(this.AmoModeField, value) != true)) {
                    this.AmoModeField = value;
                    this.RaisePropertyChanged("AmoMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmoRemark {
            get {
                return this.AmoRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.AmoRemarkField, value) != true)) {
                    this.AmoRemarkField = value;
                    this.RaisePropertyChanged("AmoRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmoSwaId {
            get {
                return this.AmoSwaIdField;
            }
            set {
                if ((this.AmoSwaIdField.Equals(value) != true)) {
                    this.AmoSwaIdField = value;
                    this.RaisePropertyChanged("AmoSwaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmoSwaName {
            get {
                return this.AmoSwaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AmoSwaNameField, value) != true)) {
                    this.AmoSwaNameField = value;
                    this.RaisePropertyChanged("AmoSwaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmoUseStatus {
            get {
                return this.AmoUseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AmoUseStatusField, value) != true)) {
                    this.AmoUseStatusField = value;
                    this.RaisePropertyChanged("AmoUseStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliveryMode", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.OutStore")]
    [System.SerializableAttribute()]
    public partial class DeliveryMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DmoCmstIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DmoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DmoIfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DmoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DmoOwaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DmoOwaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DmoRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DmoUseStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DmoCmstId {
            get {
                return this.DmoCmstIdField;
            }
            set {
                if ((this.DmoCmstIdField.Equals(value) != true)) {
                    this.DmoCmstIdField = value;
                    this.RaisePropertyChanged("DmoCmstId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DmoId {
            get {
                return this.DmoIdField;
            }
            set {
                if ((this.DmoIdField.Equals(value) != true)) {
                    this.DmoIdField = value;
                    this.RaisePropertyChanged("DmoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DmoIfUse {
            get {
                return this.DmoIfUseField;
            }
            set {
                if ((this.DmoIfUseField.Equals(value) != true)) {
                    this.DmoIfUseField = value;
                    this.RaisePropertyChanged("DmoIfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DmoName {
            get {
                return this.DmoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DmoNameField, value) != true)) {
                    this.DmoNameField = value;
                    this.RaisePropertyChanged("DmoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DmoOwaId {
            get {
                return this.DmoOwaIdField;
            }
            set {
                if ((this.DmoOwaIdField.Equals(value) != true)) {
                    this.DmoOwaIdField = value;
                    this.RaisePropertyChanged("DmoOwaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DmoOwaName {
            get {
                return this.DmoOwaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DmoOwaNameField, value) != true)) {
                    this.DmoOwaNameField = value;
                    this.RaisePropertyChanged("DmoOwaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DmoRemark {
            get {
                return this.DmoRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.DmoRemarkField, value) != true)) {
                    this.DmoRemarkField = value;
                    this.RaisePropertyChanged("DmoRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DmoUseStatus {
            get {
                return this.DmoUseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DmoUseStatusField, value) != true)) {
                    this.DmoUseStatusField = value;
                    this.RaisePropertyChanged("DmoUseStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageWay", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.InStore")]
    [System.SerializableAttribute()]
    public partial class StorageWay : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SwaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SwaIfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SwaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SwaRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SwaUseStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SwaId {
            get {
                return this.SwaIdField;
            }
            set {
                if ((this.SwaIdField.Equals(value) != true)) {
                    this.SwaIdField = value;
                    this.RaisePropertyChanged("SwaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SwaIfUse {
            get {
                return this.SwaIfUseField;
            }
            set {
                if ((this.SwaIfUseField.Equals(value) != true)) {
                    this.SwaIfUseField = value;
                    this.RaisePropertyChanged("SwaIfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SwaName {
            get {
                return this.SwaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SwaNameField, value) != true)) {
                    this.SwaNameField = value;
                    this.RaisePropertyChanged("SwaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SwaRemark {
            get {
                return this.SwaRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.SwaRemarkField, value) != true)) {
                    this.SwaRemarkField = value;
                    this.RaisePropertyChanged("SwaRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SwaUseStatus {
            get {
                return this.SwaUseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SwaUseStatusField, value) != true)) {
                    this.SwaUseStatusField = value;
                    this.RaisePropertyChanged("SwaUseStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutboundWay", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.OutStore")]
    [System.SerializableAttribute()]
    public partial class OutboundWay : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OwaIfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwaRemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwaUseStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwaId {
            get {
                return this.OwaIdField;
            }
            set {
                if ((this.OwaIdField.Equals(value) != true)) {
                    this.OwaIdField = value;
                    this.RaisePropertyChanged("OwaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OwaIfUse {
            get {
                return this.OwaIfUseField;
            }
            set {
                if ((this.OwaIfUseField.Equals(value) != true)) {
                    this.OwaIfUseField = value;
                    this.RaisePropertyChanged("OwaIfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwaName {
            get {
                return this.OwaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwaNameField, value) != true)) {
                    this.OwaNameField = value;
                    this.RaisePropertyChanged("OwaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwaRemark {
            get {
                return this.OwaRemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.OwaRemarkField, value) != true)) {
                    this.OwaRemarkField = value;
                    this.RaisePropertyChanged("OwaRemark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwaUseStatus {
            get {
                return this.OwaUseStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OwaUseStatusField, value) != true)) {
                    this.OwaUseStatusField = value;
                    this.RaisePropertyChanged("OwaUseStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AndroidData", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data")]
    [System.SerializableAttribute()]
    public partial class AndroidData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BaseManageProxy.IBaseManageProxy")]
    public interface IBaseManageProxy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepositAndroid", ReplyAction="http://tempuri.org/IBaseManage/GetDepositAndroidResponse")]
        string GetDepositAndroid(int depId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepositAndroid", ReplyAction="http://tempuri.org/IBaseManage/GetDepositAndroidResponse")]
        System.Threading.Tasks.Task<string> GetDepositAndroidAsync(int depId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetALLBillType", ReplyAction="http://tempuri.org/IBaseManage/GetALLBillTypeResponse")]
        string GetALLBillType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetALLBillType", ReplyAction="http://tempuri.org/IBaseManage/GetALLBillTypeResponse")]
        System.Threading.Tasks.Task<string> GetALLBillTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepartmentListByCmstName", ReplyAction="http://tempuri.org/IBaseManage/GetDepartmentListByCmstNameResponse")]
        string GetDepartmentListByCmstName(int CmstId, string deptName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepartmentListByCmstName", ReplyAction="http://tempuri.org/IBaseManage/GetDepartmentListByCmstNameResponse")]
        System.Threading.Tasks.Task<string> GetDepartmentListByCmstNameAsync(int CmstId, string deptName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepListByCmstIfUse", ReplyAction="http://tempuri.org/IBaseManage/GetDepListByCmstIfUseResponse")]
        string GetDepListByCmstIfUse(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepListByCmstIfUse", ReplyAction="http://tempuri.org/IBaseManage/GetDepListByCmstIfUseResponse")]
        System.Threading.Tasks.Task<string> GetDepListByCmstIfUseAsync(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveDepartment", ReplyAction="http://tempuri.org/IBaseManage/SaveDepartmentResponse")]
        string SaveDepartment(CMST.Storage.Client.Proxy.BaseManageProxy.DepartmentEntity dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveDepartment", ReplyAction="http://tempuri.org/IBaseManage/SaveDepartmentResponse")]
        System.Threading.Tasks.Task<string> SaveDepartmentAsync(CMST.Storage.Client.Proxy.BaseManageProxy.DepartmentEntity dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetThreeLevelLinkedGoodsAllocationCache", ReplyAction="http://tempuri.org/IBaseManage/GetThreeLevelLinkedGoodsAllocationCacheResponse")]
        string GetThreeLevelLinkedGoodsAllocationCache(int cmstId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetThreeLevelLinkedGoodsAllocationCache", ReplyAction="http://tempuri.org/IBaseManage/GetThreeLevelLinkedGoodsAllocationCacheResponse")]
        System.Threading.Tasks.Task<string> GetThreeLevelLinkedGoodsAllocationCacheAsync(int cmstId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/JudgeDepost", ReplyAction="http://tempuri.org/IBaseManage/JudgeDepostResponse")]
        bool JudgeDepost(int depId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/JudgeDepost", ReplyAction="http://tempuri.org/IBaseManage/JudgeDepostResponse")]
        System.Threading.Tasks.Task<bool> JudgeDepostAsync(int depId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/JudgeReservoirArea", ReplyAction="http://tempuri.org/IBaseManage/JudgeReservoirAreaResponse")]
        System.Data.DataSet JudgeReservoirArea(int rarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/JudgeReservoirArea", ReplyAction="http://tempuri.org/IBaseManage/JudgeReservoirAreaResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> JudgeReservoirAreaAsync(int rarId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/JudgeGoodsAllocation", ReplyAction="http://tempuri.org/IBaseManage/JudgeGoodsAllocationResponse")]
        bool JudgeGoodsAllocation(int galId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/JudgeGoodsAllocation", ReplyAction="http://tempuri.org/IBaseManage/JudgeGoodsAllocationResponse")]
        System.Threading.Tasks.Task<bool> JudgeGoodsAllocationAsync(int galId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetRepAdress", ReplyAction="http://tempuri.org/IBaseManage/GetRepAdressResponse")]
        string GetRepAdress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetRepAdress", ReplyAction="http://tempuri.org/IBaseManage/GetRepAdressResponse")]
        System.Threading.Tasks.Task<string> GetRepAdressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllOrganization", ReplyAction="http://tempuri.org/IBaseManage/GetAllOrganizationResponse")]
        string GetAllOrganization();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllOrganization", ReplyAction="http://tempuri.org/IBaseManage/GetAllOrganizationResponse")]
        System.Threading.Tasks.Task<string> GetAllOrganizationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllOperatorList", ReplyAction="http://tempuri.org/IBaseManage/GetAllOperatorListResponse")]
        string GetAllOperatorList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllOperatorList", ReplyAction="http://tempuri.org/IBaseManage/GetAllOperatorListResponse")]
        System.Threading.Tasks.Task<string> GetAllOperatorListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveOperator", ReplyAction="http://tempuri.org/IBaseManage/SaveOperatorResponse")]
        string SaveOperator(CMST.Storage.Client.Proxy.BaseManageProxy.OperatorEntity oe, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveOperator", ReplyAction="http://tempuri.org/IBaseManage/SaveOperatorResponse")]
        System.Threading.Tasks.Task<string> SaveOperatorAsync(CMST.Storage.Client.Proxy.BaseManageProxy.OperatorEntity oe, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorListByCmstOrg_Role_Name", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorListByCmstOrg_Role_NameResponse")]
        string GetOperatorListByCmstOrg_Role_Name(int cmstID, string rolename, string opername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorListByCmstOrg_Role_Name", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorListByCmstOrg_Role_NameResponse")]
        System.Threading.Tasks.Task<string> GetOperatorListByCmstOrg_Role_NameAsync(int cmstID, string rolename, string opername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorByOperatorID", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorByOperatorIDResponse")]
        string GetOperatorByOperatorID(int operatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorByOperatorID", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorByOperatorIDResponse")]
        System.Threading.Tasks.Task<string> GetOperatorByOperatorIDAsync(int operatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetCompanyOperatorByID", ReplyAction="http://tempuri.org/IBaseManage/GetCompanyOperatorByIDResponse")]
        string GetCompanyOperatorByID(int operatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetCompanyOperatorByID", ReplyAction="http://tempuri.org/IBaseManage/GetCompanyOperatorByIDResponse")]
        System.Threading.Tasks.Task<string> GetCompanyOperatorByIDAsync(int operatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetCompanyOperatorListByRoleAndOperater", ReplyAction="http://tempuri.org/IBaseManage/GetCompanyOperatorListByRoleAndOperaterResponse")]
        string GetCompanyOperatorListByRoleAndOperater(int cmstID, string rolename, string operatername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetCompanyOperatorListByRoleAndOperater", ReplyAction="http://tempuri.org/IBaseManage/GetCompanyOperatorListByRoleAndOperaterResponse")]
        System.Threading.Tasks.Task<string> GetCompanyOperatorListByRoleAndOperaterAsync(int cmstID, string rolename, string operatername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveCompanyOperator", ReplyAction="http://tempuri.org/IBaseManage/SaveCompanyOperatorResponse")]
        string SaveCompanyOperator(CMST.Storage.Client.Proxy.BaseManageProxy.CompanyOperatorEntity coe, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveCompanyOperator", ReplyAction="http://tempuri.org/IBaseManage/SaveCompanyOperatorResponse")]
        System.Threading.Tasks.Task<string> SaveCompanyOperatorAsync(CMST.Storage.Client.Proxy.BaseManageProxy.CompanyOperatorEntity coe, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveBindOrUnBindCA", ReplyAction="http://tempuri.org/IBaseManage/SaveBindOrUnBindCAResponse")]
        string SaveBindOrUnBindCA(int operatorID, string certstr, int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveBindOrUnBindCA", ReplyAction="http://tempuri.org/IBaseManage/SaveBindOrUnBindCAResponse")]
        System.Threading.Tasks.Task<string> SaveBindOrUnBindCAAsync(int operatorID, string certstr, int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorByAccount", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorByAccountResponse")]
        string GetOperatorByAccount(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorByAccount", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorByAccountResponse")]
        System.Threading.Tasks.Task<string> GetOperatorByAccountAsync(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorNameByID", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorNameByIDResponse")]
        string GetOperatorNameByID(int operatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorNameByID", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorNameByIDResponse")]
        System.Threading.Tasks.Task<string> GetOperatorNameByIDAsync(int operatorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/ValidatePrintPwd", ReplyAction="http://tempuri.org/IBaseManage/ValidatePrintPwdResponse")]
        string ValidatePrintPwd(string account, string password, string menuName, string operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/ValidatePrintPwd", ReplyAction="http://tempuri.org/IBaseManage/ValidatePrintPwdResponse")]
        System.Threading.Tasks.Task<string> ValidatePrintPwdAsync(string account, string password, string menuName, string operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllReservoirArea", ReplyAction="http://tempuri.org/IBaseManage/GetAllReservoirAreaResponse")]
        string GetAllReservoirArea(int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllReservoirArea", ReplyAction="http://tempuri.org/IBaseManage/GetAllReservoirAreaResponse")]
        System.Threading.Tasks.Task<string> GetAllReservoirAreaAsync(int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllRoleList", ReplyAction="http://tempuri.org/IBaseManage/GetAllRoleListResponse")]
        string GetAllRoleList(int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllRoleList", ReplyAction="http://tempuri.org/IBaseManage/GetAllRoleListResponse")]
        System.Threading.Tasks.Task<string> GetAllRoleListAsync(int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllRoleListByName", ReplyAction="http://tempuri.org/IBaseManage/GetAllRoleListByNameResponse")]
        string GetAllRoleListByName(string rolename, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllRoleListByName", ReplyAction="http://tempuri.org/IBaseManage/GetAllRoleListByNameResponse")]
        System.Threading.Tasks.Task<string> GetAllRoleListByNameAsync(string rolename, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetUseRoleList", ReplyAction="http://tempuri.org/IBaseManage/GetUseRoleListResponse")]
        string GetUseRoleList(int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetUseRoleList", ReplyAction="http://tempuri.org/IBaseManage/GetUseRoleListResponse")]
        System.Threading.Tasks.Task<string> GetUseRoleListAsync(int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllRoleOperations", ReplyAction="http://tempuri.org/IBaseManage/GetAllRoleOperationsResponse")]
        string GetAllRoleOperations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllRoleOperations", ReplyAction="http://tempuri.org/IBaseManage/GetAllRoleOperationsResponse")]
        System.Threading.Tasks.Task<string> GetAllRoleOperationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveRoleOperate", ReplyAction="http://tempuri.org/IBaseManage/SaveRoleOperateResponse")]
        string SaveRoleOperate(CMST.Storage.Client.Proxy.BaseManageProxy.RoleEntity re, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveRoleOperate", ReplyAction="http://tempuri.org/IBaseManage/SaveRoleOperateResponse")]
        System.Threading.Tasks.Task<string> SaveRoleOperateAsync(CMST.Storage.Client.Proxy.BaseManageProxy.RoleEntity re, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveRole", ReplyAction="http://tempuri.org/IBaseManage/SaveRoleResponse")]
        string SaveRole(CMST.Storage.Client.Proxy.BaseManageProxy.RoleEntity re, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveRole", ReplyAction="http://tempuri.org/IBaseManage/SaveRoleResponse")]
        System.Threading.Tasks.Task<string> SaveRoleAsync(CMST.Storage.Client.Proxy.BaseManageProxy.RoleEntity re, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetMenuUI", ReplyAction="http://tempuri.org/IBaseManage/GetMenuUIResponse")]
        string GetMenuUI();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetMenuUI", ReplyAction="http://tempuri.org/IBaseManage/GetMenuUIResponse")]
        System.Threading.Tasks.Task<string> GetMenuUIAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/OrganizationEntityClass", ReplyAction="http://tempuri.org/IBaseManage/OrganizationEntityClassResponse")]
        CMST.Storage.Client.Proxy.BaseManageProxy.OrganizationEntity OrganizationEntityClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/OrganizationEntityClass", ReplyAction="http://tempuri.org/IBaseManage/OrganizationEntityClassResponse")]
        System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.OrganizationEntity> OrganizationEntityClassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/StorageEntityClass", ReplyAction="http://tempuri.org/IBaseManage/StorageEntityClassResponse")]
        CMST.Storage.Client.Proxy.BaseManageProxy.StorageEntity StorageEntityClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/StorageEntityClass", ReplyAction="http://tempuri.org/IBaseManage/StorageEntityClassResponse")]
        System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.StorageEntity> StorageEntityClassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorAuthorities", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorAuthoritiesResponse")]
        string GetOperatorAuthorities(int operatorId, int systemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorAuthorities", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorAuthoritiesResponse")]
        System.Threading.Tasks.Task<string> GetOperatorAuthoritiesAsync(int operatorId, int systemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorMenuAuthorities", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorMenuAuthoritiesResponse")]
        string GetOperatorMenuAuthorities(int operatorId, string menuName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOperatorMenuAuthorities", ReplyAction="http://tempuri.org/IBaseManage/GetOperatorMenuAuthoritiesResponse")]
        System.Threading.Tasks.Task<string> GetOperatorMenuAuthoritiesAsync(int operatorId, string menuName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllStorage", ReplyAction="http://tempuri.org/IBaseManage/GetAllStorageResponse")]
        string GetAllStorage(int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllStorage", ReplyAction="http://tempuri.org/IBaseManage/GetAllStorageResponse")]
        System.Threading.Tasks.Task<string> GetAllStorageAsync(int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllStorageList", ReplyAction="http://tempuri.org/IBaseManage/GetAllStorageListResponse")]
        string GetAllStorageList(int _cmstid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllStorageList", ReplyAction="http://tempuri.org/IBaseManage/GetAllStorageListResponse")]
        System.Threading.Tasks.Task<string> GetAllStorageListAsync(int _cmstid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveStorage", ReplyAction="http://tempuri.org/IBaseManage/SaveStorageResponse")]
        string SaveStorage(CMST.Storage.Client.Proxy.BaseManageProxy.StorageEntity se, int userId, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveStorage", ReplyAction="http://tempuri.org/IBaseManage/SaveStorageResponse")]
        System.Threading.Tasks.Task<string> SaveStorageAsync(CMST.Storage.Client.Proxy.BaseManageProxy.StorageEntity se, int userId, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllReservoirList", ReplyAction="http://tempuri.org/IBaseManage/GetAllReservoirListResponse")]
        string GetAllReservoirList(int dep_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllReservoirList", ReplyAction="http://tempuri.org/IBaseManage/GetAllReservoirListResponse")]
        System.Threading.Tasks.Task<string> GetAllReservoirListAsync(int dep_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetPropertyList", ReplyAction="http://tempuri.org/IBaseManage/GetPropertyListResponse")]
        string GetPropertyList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetPropertyList", ReplyAction="http://tempuri.org/IBaseManage/GetPropertyListResponse")]
        System.Threading.Tasks.Task<string> GetPropertyListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllReservoirListByNamee", ReplyAction="http://tempuri.org/IBaseManage/GetAllReservoirListByNameeResponse")]
        string GetAllReservoirListByNamee(string reservoir_name, int dep_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllReservoirListByNamee", ReplyAction="http://tempuri.org/IBaseManage/GetAllReservoirListByNameeResponse")]
        System.Threading.Tasks.Task<string> GetAllReservoirListByNameeAsync(string reservoir_name, int dep_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveReservoirStorage", ReplyAction="http://tempuri.org/IBaseManage/SaveReservoirStorageResponse")]
        string SaveReservoirStorage(CMST.Storage.Client.Proxy.BaseManageProxy.ReservoirAreaEntity se, int userId, int dep_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveReservoirStorage", ReplyAction="http://tempuri.org/IBaseManage/SaveReservoirStorageResponse")]
        System.Threading.Tasks.Task<string> SaveReservoirStorageAsync(CMST.Storage.Client.Proxy.BaseManageProxy.ReservoirAreaEntity se, int userId, int dep_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetCBStorageData", ReplyAction="http://tempuri.org/IBaseManage/GetCBStorageDataResponse")]
        System.Data.DataSet GetCBStorageData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetCBStorageData", ReplyAction="http://tempuri.org/IBaseManage/GetCBStorageDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCBStorageDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetCBReservoirData", ReplyAction="http://tempuri.org/IBaseManage/GetCBReservoirDataResponse")]
        System.Data.DataSet GetCBReservoirData(string dep_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetCBReservoirData", ReplyAction="http://tempuri.org/IBaseManage/GetCBReservoirDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCBReservoirDataAsync(string dep_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetStorageData", ReplyAction="http://tempuri.org/IBaseManage/GetStorageDataResponse")]
        System.Data.DataSet GetStorageData(string dep_name, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetStorageData", ReplyAction="http://tempuri.org/IBaseManage/GetStorageDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStorageDataAsync(string dep_name, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetReservoirData", ReplyAction="http://tempuri.org/IBaseManage/GetReservoirDataResponse")]
        System.Data.DataSet GetReservoirData(string dep_name, string rar_name, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetReservoirData", ReplyAction="http://tempuri.org/IBaseManage/GetReservoirDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetReservoirDataAsync(string dep_name, string rar_name, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepositPlaceData", ReplyAction="http://tempuri.org/IBaseManage/GetDepositPlaceDataResponse")]
        System.Data.DataSet GetDepositPlaceData(string rar_name, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepositPlaceData", ReplyAction="http://tempuri.org/IBaseManage/GetDepositPlaceDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDepositPlaceDataAsync(string rar_name, int cmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/InsertDepositPlace1", ReplyAction="http://tempuri.org/IBaseManage/InsertDepositPlace1Response")]
        int InsertDepositPlace1(CMST.Storage.Client.Proxy.BaseManageProxy.DepositPlace_Model dm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/InsertDepositPlace1", ReplyAction="http://tempuri.org/IBaseManage/InsertDepositPlace1Response")]
        System.Threading.Tasks.Task<int> InsertDepositPlace1Async(CMST.Storage.Client.Proxy.BaseManageProxy.DepositPlace_Model dm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/UpdateDepositPlace1", ReplyAction="http://tempuri.org/IBaseManage/UpdateDepositPlace1Response")]
        bool UpdateDepositPlace1(int id, string newname, int tag, int ifuse, string descriptionname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/UpdateDepositPlace1", ReplyAction="http://tempuri.org/IBaseManage/UpdateDepositPlace1Response")]
        System.Threading.Tasks.Task<bool> UpdateDepositPlace1Async(int id, string newname, int tag, int ifuse, string descriptionname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetStorageWayList", ReplyAction="http://tempuri.org/IBaseManage/GetStorageWayListResponse")]
        string GetStorageWayList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetStorageWayList", ReplyAction="http://tempuri.org/IBaseManage/GetStorageWayListResponse")]
        System.Threading.Tasks.Task<string> GetStorageWayListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOutboundWayList", ReplyAction="http://tempuri.org/IBaseManage/GetOutboundWayListResponse")]
        string GetOutboundWayList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetOutboundWayList", ReplyAction="http://tempuri.org/IBaseManage/GetOutboundWayListResponse")]
        System.Threading.Tasks.Task<string> GetOutboundWayListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveArrivalMode", ReplyAction="http://tempuri.org/IBaseManage/SaveArrivalModeResponse")]
        string SaveArrivalMode(CMST.Storage.Client.Proxy.BaseManageProxy.ArrivalMode am, int Opertator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveArrivalMode", ReplyAction="http://tempuri.org/IBaseManage/SaveArrivalModeResponse")]
        System.Threading.Tasks.Task<string> SaveArrivalModeAsync(CMST.Storage.Client.Proxy.BaseManageProxy.ArrivalMode am, int Opertator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveDeliveryMode", ReplyAction="http://tempuri.org/IBaseManage/SaveDeliveryModeResponse")]
        string SaveDeliveryMode(CMST.Storage.Client.Proxy.BaseManageProxy.DeliveryMode dm, int Opertator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/SaveDeliveryMode", ReplyAction="http://tempuri.org/IBaseManage/SaveDeliveryModeResponse")]
        System.Threading.Tasks.Task<string> SaveDeliveryModeAsync(CMST.Storage.Client.Proxy.BaseManageProxy.DeliveryMode dm, int Opertator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryAllArrivalMode", ReplyAction="http://tempuri.org/IBaseManage/QueryAllArrivalModeResponse")]
        string QueryAllArrivalMode(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryAllArrivalMode", ReplyAction="http://tempuri.org/IBaseManage/QueryAllArrivalModeResponse")]
        System.Threading.Tasks.Task<string> QueryAllArrivalModeAsync(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryArrivalModeIfUse", ReplyAction="http://tempuri.org/IBaseManage/QueryArrivalModeIfUseResponse")]
        string QueryArrivalModeIfUse(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryArrivalModeIfUse", ReplyAction="http://tempuri.org/IBaseManage/QueryArrivalModeIfUseResponse")]
        System.Threading.Tasks.Task<string> QueryArrivalModeIfUseAsync(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryAllDeliveryMode", ReplyAction="http://tempuri.org/IBaseManage/QueryAllDeliveryModeResponse")]
        string QueryAllDeliveryMode(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryAllDeliveryMode", ReplyAction="http://tempuri.org/IBaseManage/QueryAllDeliveryModeResponse")]
        System.Threading.Tasks.Task<string> QueryAllDeliveryModeAsync(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryDeliveryModeIfUse", ReplyAction="http://tempuri.org/IBaseManage/QueryDeliveryModeIfUseResponse")]
        string QueryDeliveryModeIfUse(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryDeliveryModeIfUse", ReplyAction="http://tempuri.org/IBaseManage/QueryDeliveryModeIfUseResponse")]
        System.Threading.Tasks.Task<string> QueryDeliveryModeIfUseAsync(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryAllArrivalModeEntity", ReplyAction="http://tempuri.org/IBaseManage/QueryAllArrivalModeEntityResponse")]
        string QueryAllArrivalModeEntity(int AmoCmstId, int AmoSwaId, string AmoMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryAllArrivalModeEntity", ReplyAction="http://tempuri.org/IBaseManage/QueryAllArrivalModeEntityResponse")]
        System.Threading.Tasks.Task<string> QueryAllArrivalModeEntityAsync(int AmoCmstId, int AmoSwaId, string AmoMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryAllDeliveryModeEntity", ReplyAction="http://tempuri.org/IBaseManage/QueryAllDeliveryModeEntityResponse")]
        string QueryAllDeliveryModeEntity(int DmoCmstId, int DmoOwaId, string DmoName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/QueryAllDeliveryModeEntity", ReplyAction="http://tempuri.org/IBaseManage/QueryAllDeliveryModeEntityResponse")]
        System.Threading.Tasks.Task<string> QueryAllDeliveryModeEntityAsync(int DmoCmstId, int DmoOwaId, string DmoName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GenerateStorageWayClass", ReplyAction="http://tempuri.org/IBaseManage/GenerateStorageWayClassResponse")]
        CMST.Storage.Client.Proxy.BaseManageProxy.StorageWay GenerateStorageWayClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GenerateStorageWayClass", ReplyAction="http://tempuri.org/IBaseManage/GenerateStorageWayClassResponse")]
        System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.StorageWay> GenerateStorageWayClassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GenerateOutboundWayClass", ReplyAction="http://tempuri.org/IBaseManage/GenerateOutboundWayClassResponse")]
        CMST.Storage.Client.Proxy.BaseManageProxy.OutboundWay GenerateOutboundWayClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GenerateOutboundWayClass", ReplyAction="http://tempuri.org/IBaseManage/GenerateOutboundWayClassResponse")]
        System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.OutboundWay> GenerateOutboundWayClassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GenerateArrivalModeClass", ReplyAction="http://tempuri.org/IBaseManage/GenerateArrivalModeClassResponse")]
        CMST.Storage.Client.Proxy.BaseManageProxy.ArrivalMode GenerateArrivalModeClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GenerateArrivalModeClass", ReplyAction="http://tempuri.org/IBaseManage/GenerateArrivalModeClassResponse")]
        System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.ArrivalMode> GenerateArrivalModeClassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GenerateDeliveryModeClass", ReplyAction="http://tempuri.org/IBaseManage/GenerateDeliveryModeClassResponse")]
        CMST.Storage.Client.Proxy.BaseManageProxy.DeliveryMode GenerateDeliveryModeClass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GenerateDeliveryModeClass", ReplyAction="http://tempuri.org/IBaseManage/GenerateDeliveryModeClassResponse")]
        System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.DeliveryMode> GenerateDeliveryModeClassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllStorageListByName", ReplyAction="http://tempuri.org/IBaseManage/GetAllStorageListByNameResponse")]
        string GetAllStorageListByName(string storage_name, int _cmstid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetAllStorageListByName", ReplyAction="http://tempuri.org/IBaseManage/GetAllStorageListByNameResponse")]
        System.Threading.Tasks.Task<string> GetAllStorageListByNameAsync(string storage_name, int _cmstid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetStorageCache", ReplyAction="http://tempuri.org/IBaseManage/GetStorageCacheResponse")]
        System.Data.DataSet GetStorageCache(int _cmstid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetStorageCache", ReplyAction="http://tempuri.org/IBaseManage/GetStorageCacheResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStorageCacheAsync(int _cmstid, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepPowerForAndoird", ReplyAction="http://tempuri.org/IBaseManage/GetDepPowerForAndoirdResponse")]
        string GetDepPowerForAndoird(int cmstId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepPowerForAndoird", ReplyAction="http://tempuri.org/IBaseManage/GetDepPowerForAndoirdResponse")]
        System.Threading.Tasks.Task<string> GetDepPowerForAndoirdAsync(int cmstId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetPersonCache", ReplyAction="http://tempuri.org/IBaseManage/GetPersonCacheResponse")]
        System.Data.DataSet GetPersonCache(int _cmstid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetPersonCache", ReplyAction="http://tempuri.org/IBaseManage/GetPersonCacheResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPersonCacheAsync(int _cmstid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetArrivalModeCache", ReplyAction="http://tempuri.org/IBaseManage/GetArrivalModeCacheResponse")]
        System.Data.DataSet GetArrivalModeCache(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetArrivalModeCache", ReplyAction="http://tempuri.org/IBaseManage/GetArrivalModeCacheResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetArrivalModeCacheAsync(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDeliveryModeCache", ReplyAction="http://tempuri.org/IBaseManage/GetDeliveryModeCacheResponse")]
        System.Data.DataSet GetDeliveryModeCache(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDeliveryModeCache", ReplyAction="http://tempuri.org/IBaseManage/GetDeliveryModeCacheResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDeliveryModeCacheAsync(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepotsCache", ReplyAction="http://tempuri.org/IBaseManage/GetDepotsCacheResponse")]
        System.Data.DataSet GetDepotsCache(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepotsCache", ReplyAction="http://tempuri.org/IBaseManage/GetDepotsCacheResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDepotsCacheAsync(int CmstId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetReservoirCacheAndroid", ReplyAction="http://tempuri.org/IBaseManage/GetReservoirCacheAndroidResponse")]
        string GetReservoirCacheAndroid(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetReservoirCacheAndroid", ReplyAction="http://tempuri.org/IBaseManage/GetReservoirCacheAndroidResponse")]
        System.Threading.Tasks.Task<string> GetReservoirCacheAndroidAsync(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepositCacheAndroid", ReplyAction="http://tempuri.org/IBaseManage/GetDepositCacheAndroidResponse")]
        string GetDepositCacheAndroid(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetDepositCacheAndroid", ReplyAction="http://tempuri.org/IBaseManage/GetDepositCacheAndroidResponse")]
        System.Threading.Tasks.Task<string> GetDepositCacheAndroidAsync(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetPersonCacheAndroid", ReplyAction="http://tempuri.org/IBaseManage/GetPersonCacheAndroidResponse")]
        string GetPersonCacheAndroid(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetPersonCacheAndroid", ReplyAction="http://tempuri.org/IBaseManage/GetPersonCacheAndroidResponse")]
        System.Threading.Tasks.Task<string> GetPersonCacheAndroidAsync(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetArrivalDeliveryModeCacheAndroid", ReplyAction="http://tempuri.org/IBaseManage/GetArrivalDeliveryModeCacheAndroidResponse")]
        string GetArrivalDeliveryModeCacheAndroid(int _cmstid, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetArrivalDeliveryModeCacheAndroid", ReplyAction="http://tempuri.org/IBaseManage/GetArrivalDeliveryModeCacheAndroidResponse")]
        System.Threading.Tasks.Task<string> GetArrivalDeliveryModeCacheAndroidAsync(int _cmstid, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetReservoirAreaEntityByOpeID", ReplyAction="http://tempuri.org/IBaseManage/GetReservoirAreaEntityByOpeIDResponse")]
        string GetReservoirAreaEntityByOpeID(int opeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseManage/GetReservoirAreaEntityByOpeID", ReplyAction="http://tempuri.org/IBaseManage/GetReservoirAreaEntityByOpeIDResponse")]
        System.Threading.Tasks.Task<string> GetReservoirAreaEntityByOpeIDAsync(int opeId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBaseManageProxyChannel : CMST.Storage.Client.Proxy.BaseManageProxy.IBaseManageProxy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BaseManageProxyClient : System.ServiceModel.ClientBase<CMST.Storage.Client.Proxy.BaseManageProxy.IBaseManageProxy>, CMST.Storage.Client.Proxy.BaseManageProxy.IBaseManageProxy {
        
        public BaseManageProxyClient() {
        }
        
        public BaseManageProxyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BaseManageProxyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BaseManageProxyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BaseManageProxyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDepositAndroid(int depId) {
            return base.Channel.GetDepositAndroid(depId);
        }
        
        public System.Threading.Tasks.Task<string> GetDepositAndroidAsync(int depId) {
            return base.Channel.GetDepositAndroidAsync(depId);
        }
        
        public string GetALLBillType() {
            return base.Channel.GetALLBillType();
        }
        
        public System.Threading.Tasks.Task<string> GetALLBillTypeAsync() {
            return base.Channel.GetALLBillTypeAsync();
        }
        
        public string GetDepartmentListByCmstName(int CmstId, string deptName) {
            return base.Channel.GetDepartmentListByCmstName(CmstId, deptName);
        }
        
        public System.Threading.Tasks.Task<string> GetDepartmentListByCmstNameAsync(int CmstId, string deptName) {
            return base.Channel.GetDepartmentListByCmstNameAsync(CmstId, deptName);
        }
        
        public string GetDepListByCmstIfUse(int CmstId) {
            return base.Channel.GetDepListByCmstIfUse(CmstId);
        }
        
        public System.Threading.Tasks.Task<string> GetDepListByCmstIfUseAsync(int CmstId) {
            return base.Channel.GetDepListByCmstIfUseAsync(CmstId);
        }
        
        public string SaveDepartment(CMST.Storage.Client.Proxy.BaseManageProxy.DepartmentEntity dept) {
            return base.Channel.SaveDepartment(dept);
        }
        
        public System.Threading.Tasks.Task<string> SaveDepartmentAsync(CMST.Storage.Client.Proxy.BaseManageProxy.DepartmentEntity dept) {
            return base.Channel.SaveDepartmentAsync(dept);
        }
        
        public string GetThreeLevelLinkedGoodsAllocationCache(int cmstId, int userId) {
            return base.Channel.GetThreeLevelLinkedGoodsAllocationCache(cmstId, userId);
        }
        
        public System.Threading.Tasks.Task<string> GetThreeLevelLinkedGoodsAllocationCacheAsync(int cmstId, int userId) {
            return base.Channel.GetThreeLevelLinkedGoodsAllocationCacheAsync(cmstId, userId);
        }
        
        public bool JudgeDepost(int depId) {
            return base.Channel.JudgeDepost(depId);
        }
        
        public System.Threading.Tasks.Task<bool> JudgeDepostAsync(int depId) {
            return base.Channel.JudgeDepostAsync(depId);
        }
        
        public System.Data.DataSet JudgeReservoirArea(int rarId) {
            return base.Channel.JudgeReservoirArea(rarId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> JudgeReservoirAreaAsync(int rarId) {
            return base.Channel.JudgeReservoirAreaAsync(rarId);
        }
        
        public bool JudgeGoodsAllocation(int galId) {
            return base.Channel.JudgeGoodsAllocation(galId);
        }
        
        public System.Threading.Tasks.Task<bool> JudgeGoodsAllocationAsync(int galId) {
            return base.Channel.JudgeGoodsAllocationAsync(galId);
        }
        
        public string GetRepAdress() {
            return base.Channel.GetRepAdress();
        }
        
        public System.Threading.Tasks.Task<string> GetRepAdressAsync() {
            return base.Channel.GetRepAdressAsync();
        }
        
        public string GetAllOrganization() {
            return base.Channel.GetAllOrganization();
        }
        
        public System.Threading.Tasks.Task<string> GetAllOrganizationAsync() {
            return base.Channel.GetAllOrganizationAsync();
        }
        
        public string GetAllOperatorList() {
            return base.Channel.GetAllOperatorList();
        }
        
        public System.Threading.Tasks.Task<string> GetAllOperatorListAsync() {
            return base.Channel.GetAllOperatorListAsync();
        }
        
        public string SaveOperator(CMST.Storage.Client.Proxy.BaseManageProxy.OperatorEntity oe, int userId) {
            return base.Channel.SaveOperator(oe, userId);
        }
        
        public System.Threading.Tasks.Task<string> SaveOperatorAsync(CMST.Storage.Client.Proxy.BaseManageProxy.OperatorEntity oe, int userId) {
            return base.Channel.SaveOperatorAsync(oe, userId);
        }
        
        public string GetOperatorListByCmstOrg_Role_Name(int cmstID, string rolename, string opername) {
            return base.Channel.GetOperatorListByCmstOrg_Role_Name(cmstID, rolename, opername);
        }
        
        public System.Threading.Tasks.Task<string> GetOperatorListByCmstOrg_Role_NameAsync(int cmstID, string rolename, string opername) {
            return base.Channel.GetOperatorListByCmstOrg_Role_NameAsync(cmstID, rolename, opername);
        }
        
        public string GetOperatorByOperatorID(int operatorId) {
            return base.Channel.GetOperatorByOperatorID(operatorId);
        }
        
        public System.Threading.Tasks.Task<string> GetOperatorByOperatorIDAsync(int operatorId) {
            return base.Channel.GetOperatorByOperatorIDAsync(operatorId);
        }
        
        public string GetCompanyOperatorByID(int operatorId) {
            return base.Channel.GetCompanyOperatorByID(operatorId);
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyOperatorByIDAsync(int operatorId) {
            return base.Channel.GetCompanyOperatorByIDAsync(operatorId);
        }
        
        public string GetCompanyOperatorListByRoleAndOperater(int cmstID, string rolename, string operatername) {
            return base.Channel.GetCompanyOperatorListByRoleAndOperater(cmstID, rolename, operatername);
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyOperatorListByRoleAndOperaterAsync(int cmstID, string rolename, string operatername) {
            return base.Channel.GetCompanyOperatorListByRoleAndOperaterAsync(cmstID, rolename, operatername);
        }
        
        public string SaveCompanyOperator(CMST.Storage.Client.Proxy.BaseManageProxy.CompanyOperatorEntity coe, int userId) {
            return base.Channel.SaveCompanyOperator(coe, userId);
        }
        
        public System.Threading.Tasks.Task<string> SaveCompanyOperatorAsync(CMST.Storage.Client.Proxy.BaseManageProxy.CompanyOperatorEntity coe, int userId) {
            return base.Channel.SaveCompanyOperatorAsync(coe, userId);
        }
        
        public string SaveBindOrUnBindCA(int operatorID, string certstr, int mode) {
            return base.Channel.SaveBindOrUnBindCA(operatorID, certstr, mode);
        }
        
        public System.Threading.Tasks.Task<string> SaveBindOrUnBindCAAsync(int operatorID, string certstr, int mode) {
            return base.Channel.SaveBindOrUnBindCAAsync(operatorID, certstr, mode);
        }
        
        public string GetOperatorByAccount(string account) {
            return base.Channel.GetOperatorByAccount(account);
        }
        
        public System.Threading.Tasks.Task<string> GetOperatorByAccountAsync(string account) {
            return base.Channel.GetOperatorByAccountAsync(account);
        }
        
        public string GetOperatorNameByID(int operatorId) {
            return base.Channel.GetOperatorNameByID(operatorId);
        }
        
        public System.Threading.Tasks.Task<string> GetOperatorNameByIDAsync(int operatorId) {
            return base.Channel.GetOperatorNameByIDAsync(operatorId);
        }
        
        public string ValidatePrintPwd(string account, string password, string menuName, string operation) {
            return base.Channel.ValidatePrintPwd(account, password, menuName, operation);
        }
        
        public System.Threading.Tasks.Task<string> ValidatePrintPwdAsync(string account, string password, string menuName, string operation) {
            return base.Channel.ValidatePrintPwdAsync(account, password, menuName, operation);
        }
        
        public string GetAllReservoirArea(int cmstId) {
            return base.Channel.GetAllReservoirArea(cmstId);
        }
        
        public System.Threading.Tasks.Task<string> GetAllReservoirAreaAsync(int cmstId) {
            return base.Channel.GetAllReservoirAreaAsync(cmstId);
        }
        
        public string GetAllRoleList(int cmstId) {
            return base.Channel.GetAllRoleList(cmstId);
        }
        
        public System.Threading.Tasks.Task<string> GetAllRoleListAsync(int cmstId) {
            return base.Channel.GetAllRoleListAsync(cmstId);
        }
        
        public string GetAllRoleListByName(string rolename, int cmstId) {
            return base.Channel.GetAllRoleListByName(rolename, cmstId);
        }
        
        public System.Threading.Tasks.Task<string> GetAllRoleListByNameAsync(string rolename, int cmstId) {
            return base.Channel.GetAllRoleListByNameAsync(rolename, cmstId);
        }
        
        public string GetUseRoleList(int cmstId) {
            return base.Channel.GetUseRoleList(cmstId);
        }
        
        public System.Threading.Tasks.Task<string> GetUseRoleListAsync(int cmstId) {
            return base.Channel.GetUseRoleListAsync(cmstId);
        }
        
        public string GetAllRoleOperations() {
            return base.Channel.GetAllRoleOperations();
        }
        
        public System.Threading.Tasks.Task<string> GetAllRoleOperationsAsync() {
            return base.Channel.GetAllRoleOperationsAsync();
        }
        
        public string SaveRoleOperate(CMST.Storage.Client.Proxy.BaseManageProxy.RoleEntity re, int userId) {
            return base.Channel.SaveRoleOperate(re, userId);
        }
        
        public System.Threading.Tasks.Task<string> SaveRoleOperateAsync(CMST.Storage.Client.Proxy.BaseManageProxy.RoleEntity re, int userId) {
            return base.Channel.SaveRoleOperateAsync(re, userId);
        }
        
        public string SaveRole(CMST.Storage.Client.Proxy.BaseManageProxy.RoleEntity re, int userId) {
            return base.Channel.SaveRole(re, userId);
        }
        
        public System.Threading.Tasks.Task<string> SaveRoleAsync(CMST.Storage.Client.Proxy.BaseManageProxy.RoleEntity re, int userId) {
            return base.Channel.SaveRoleAsync(re, userId);
        }
        
        public string GetMenuUI() {
            return base.Channel.GetMenuUI();
        }
        
        public System.Threading.Tasks.Task<string> GetMenuUIAsync() {
            return base.Channel.GetMenuUIAsync();
        }
        
        public CMST.Storage.Client.Proxy.BaseManageProxy.OrganizationEntity OrganizationEntityClass() {
            return base.Channel.OrganizationEntityClass();
        }
        
        public System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.OrganizationEntity> OrganizationEntityClassAsync() {
            return base.Channel.OrganizationEntityClassAsync();
        }
        
        public CMST.Storage.Client.Proxy.BaseManageProxy.StorageEntity StorageEntityClass() {
            return base.Channel.StorageEntityClass();
        }
        
        public System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.StorageEntity> StorageEntityClassAsync() {
            return base.Channel.StorageEntityClassAsync();
        }
        
        public string GetOperatorAuthorities(int operatorId, int systemId) {
            return base.Channel.GetOperatorAuthorities(operatorId, systemId);
        }
        
        public System.Threading.Tasks.Task<string> GetOperatorAuthoritiesAsync(int operatorId, int systemId) {
            return base.Channel.GetOperatorAuthoritiesAsync(operatorId, systemId);
        }
        
        public string GetOperatorMenuAuthorities(int operatorId, string menuName) {
            return base.Channel.GetOperatorMenuAuthorities(operatorId, menuName);
        }
        
        public System.Threading.Tasks.Task<string> GetOperatorMenuAuthoritiesAsync(int operatorId, string menuName) {
            return base.Channel.GetOperatorMenuAuthoritiesAsync(operatorId, menuName);
        }
        
        public string GetAllStorage(int cmstId) {
            return base.Channel.GetAllStorage(cmstId);
        }
        
        public System.Threading.Tasks.Task<string> GetAllStorageAsync(int cmstId) {
            return base.Channel.GetAllStorageAsync(cmstId);
        }
        
        public string GetAllStorageList(int _cmstid) {
            return base.Channel.GetAllStorageList(_cmstid);
        }
        
        public System.Threading.Tasks.Task<string> GetAllStorageListAsync(int _cmstid) {
            return base.Channel.GetAllStorageListAsync(_cmstid);
        }
        
        public string SaveStorage(CMST.Storage.Client.Proxy.BaseManageProxy.StorageEntity se, int userId, int cmstId) {
            return base.Channel.SaveStorage(se, userId, cmstId);
        }
        
        public System.Threading.Tasks.Task<string> SaveStorageAsync(CMST.Storage.Client.Proxy.BaseManageProxy.StorageEntity se, int userId, int cmstId) {
            return base.Channel.SaveStorageAsync(se, userId, cmstId);
        }
        
        public string GetAllReservoirList(int dep_id) {
            return base.Channel.GetAllReservoirList(dep_id);
        }
        
        public System.Threading.Tasks.Task<string> GetAllReservoirListAsync(int dep_id) {
            return base.Channel.GetAllReservoirListAsync(dep_id);
        }
        
        public string GetPropertyList() {
            return base.Channel.GetPropertyList();
        }
        
        public System.Threading.Tasks.Task<string> GetPropertyListAsync() {
            return base.Channel.GetPropertyListAsync();
        }
        
        public string GetAllReservoirListByNamee(string reservoir_name, int dep_id) {
            return base.Channel.GetAllReservoirListByNamee(reservoir_name, dep_id);
        }
        
        public System.Threading.Tasks.Task<string> GetAllReservoirListByNameeAsync(string reservoir_name, int dep_id) {
            return base.Channel.GetAllReservoirListByNameeAsync(reservoir_name, dep_id);
        }
        
        public string SaveReservoirStorage(CMST.Storage.Client.Proxy.BaseManageProxy.ReservoirAreaEntity se, int userId, int dep_id) {
            return base.Channel.SaveReservoirStorage(se, userId, dep_id);
        }
        
        public System.Threading.Tasks.Task<string> SaveReservoirStorageAsync(CMST.Storage.Client.Proxy.BaseManageProxy.ReservoirAreaEntity se, int userId, int dep_id) {
            return base.Channel.SaveReservoirStorageAsync(se, userId, dep_id);
        }
        
        public System.Data.DataSet GetCBStorageData() {
            return base.Channel.GetCBStorageData();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCBStorageDataAsync() {
            return base.Channel.GetCBStorageDataAsync();
        }
        
        public System.Data.DataSet GetCBReservoirData(string dep_name) {
            return base.Channel.GetCBReservoirData(dep_name);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCBReservoirDataAsync(string dep_name) {
            return base.Channel.GetCBReservoirDataAsync(dep_name);
        }
        
        public System.Data.DataSet GetStorageData(string dep_name, int cmstId) {
            return base.Channel.GetStorageData(dep_name, cmstId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStorageDataAsync(string dep_name, int cmstId) {
            return base.Channel.GetStorageDataAsync(dep_name, cmstId);
        }
        
        public System.Data.DataSet GetReservoirData(string dep_name, string rar_name, int cmstId) {
            return base.Channel.GetReservoirData(dep_name, rar_name, cmstId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetReservoirDataAsync(string dep_name, string rar_name, int cmstId) {
            return base.Channel.GetReservoirDataAsync(dep_name, rar_name, cmstId);
        }
        
        public System.Data.DataSet GetDepositPlaceData(string rar_name, int cmstId) {
            return base.Channel.GetDepositPlaceData(rar_name, cmstId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDepositPlaceDataAsync(string rar_name, int cmstId) {
            return base.Channel.GetDepositPlaceDataAsync(rar_name, cmstId);
        }
        
        public int InsertDepositPlace1(CMST.Storage.Client.Proxy.BaseManageProxy.DepositPlace_Model dm) {
            return base.Channel.InsertDepositPlace1(dm);
        }
        
        public System.Threading.Tasks.Task<int> InsertDepositPlace1Async(CMST.Storage.Client.Proxy.BaseManageProxy.DepositPlace_Model dm) {
            return base.Channel.InsertDepositPlace1Async(dm);
        }
        
        public bool UpdateDepositPlace1(int id, string newname, int tag, int ifuse, string descriptionname) {
            return base.Channel.UpdateDepositPlace1(id, newname, tag, ifuse, descriptionname);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateDepositPlace1Async(int id, string newname, int tag, int ifuse, string descriptionname) {
            return base.Channel.UpdateDepositPlace1Async(id, newname, tag, ifuse, descriptionname);
        }
        
        public string GetStorageWayList() {
            return base.Channel.GetStorageWayList();
        }
        
        public System.Threading.Tasks.Task<string> GetStorageWayListAsync() {
            return base.Channel.GetStorageWayListAsync();
        }
        
        public string GetOutboundWayList() {
            return base.Channel.GetOutboundWayList();
        }
        
        public System.Threading.Tasks.Task<string> GetOutboundWayListAsync() {
            return base.Channel.GetOutboundWayListAsync();
        }
        
        public string SaveArrivalMode(CMST.Storage.Client.Proxy.BaseManageProxy.ArrivalMode am, int Opertator) {
            return base.Channel.SaveArrivalMode(am, Opertator);
        }
        
        public System.Threading.Tasks.Task<string> SaveArrivalModeAsync(CMST.Storage.Client.Proxy.BaseManageProxy.ArrivalMode am, int Opertator) {
            return base.Channel.SaveArrivalModeAsync(am, Opertator);
        }
        
        public string SaveDeliveryMode(CMST.Storage.Client.Proxy.BaseManageProxy.DeliveryMode dm, int Opertator) {
            return base.Channel.SaveDeliveryMode(dm, Opertator);
        }
        
        public System.Threading.Tasks.Task<string> SaveDeliveryModeAsync(CMST.Storage.Client.Proxy.BaseManageProxy.DeliveryMode dm, int Opertator) {
            return base.Channel.SaveDeliveryModeAsync(dm, Opertator);
        }
        
        public string QueryAllArrivalMode(int CmstId) {
            return base.Channel.QueryAllArrivalMode(CmstId);
        }
        
        public System.Threading.Tasks.Task<string> QueryAllArrivalModeAsync(int CmstId) {
            return base.Channel.QueryAllArrivalModeAsync(CmstId);
        }
        
        public string QueryArrivalModeIfUse(int CmstId) {
            return base.Channel.QueryArrivalModeIfUse(CmstId);
        }
        
        public System.Threading.Tasks.Task<string> QueryArrivalModeIfUseAsync(int CmstId) {
            return base.Channel.QueryArrivalModeIfUseAsync(CmstId);
        }
        
        public string QueryAllDeliveryMode(int CmstId) {
            return base.Channel.QueryAllDeliveryMode(CmstId);
        }
        
        public System.Threading.Tasks.Task<string> QueryAllDeliveryModeAsync(int CmstId) {
            return base.Channel.QueryAllDeliveryModeAsync(CmstId);
        }
        
        public string QueryDeliveryModeIfUse(int CmstId) {
            return base.Channel.QueryDeliveryModeIfUse(CmstId);
        }
        
        public System.Threading.Tasks.Task<string> QueryDeliveryModeIfUseAsync(int CmstId) {
            return base.Channel.QueryDeliveryModeIfUseAsync(CmstId);
        }
        
        public string QueryAllArrivalModeEntity(int AmoCmstId, int AmoSwaId, string AmoMode) {
            return base.Channel.QueryAllArrivalModeEntity(AmoCmstId, AmoSwaId, AmoMode);
        }
        
        public System.Threading.Tasks.Task<string> QueryAllArrivalModeEntityAsync(int AmoCmstId, int AmoSwaId, string AmoMode) {
            return base.Channel.QueryAllArrivalModeEntityAsync(AmoCmstId, AmoSwaId, AmoMode);
        }
        
        public string QueryAllDeliveryModeEntity(int DmoCmstId, int DmoOwaId, string DmoName) {
            return base.Channel.QueryAllDeliveryModeEntity(DmoCmstId, DmoOwaId, DmoName);
        }
        
        public System.Threading.Tasks.Task<string> QueryAllDeliveryModeEntityAsync(int DmoCmstId, int DmoOwaId, string DmoName) {
            return base.Channel.QueryAllDeliveryModeEntityAsync(DmoCmstId, DmoOwaId, DmoName);
        }
        
        public CMST.Storage.Client.Proxy.BaseManageProxy.StorageWay GenerateStorageWayClass() {
            return base.Channel.GenerateStorageWayClass();
        }
        
        public System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.StorageWay> GenerateStorageWayClassAsync() {
            return base.Channel.GenerateStorageWayClassAsync();
        }
        
        public CMST.Storage.Client.Proxy.BaseManageProxy.OutboundWay GenerateOutboundWayClass() {
            return base.Channel.GenerateOutboundWayClass();
        }
        
        public System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.OutboundWay> GenerateOutboundWayClassAsync() {
            return base.Channel.GenerateOutboundWayClassAsync();
        }
        
        public CMST.Storage.Client.Proxy.BaseManageProxy.ArrivalMode GenerateArrivalModeClass() {
            return base.Channel.GenerateArrivalModeClass();
        }
        
        public System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.ArrivalMode> GenerateArrivalModeClassAsync() {
            return base.Channel.GenerateArrivalModeClassAsync();
        }
        
        public CMST.Storage.Client.Proxy.BaseManageProxy.DeliveryMode GenerateDeliveryModeClass() {
            return base.Channel.GenerateDeliveryModeClass();
        }
        
        public System.Threading.Tasks.Task<CMST.Storage.Client.Proxy.BaseManageProxy.DeliveryMode> GenerateDeliveryModeClassAsync() {
            return base.Channel.GenerateDeliveryModeClassAsync();
        }
        
        public string GetAllStorageListByName(string storage_name, int _cmstid) {
            return base.Channel.GetAllStorageListByName(storage_name, _cmstid);
        }
        
        public System.Threading.Tasks.Task<string> GetAllStorageListByNameAsync(string storage_name, int _cmstid) {
            return base.Channel.GetAllStorageListByNameAsync(storage_name, _cmstid);
        }
        
        public System.Data.DataSet GetStorageCache(int _cmstid, int userid) {
            return base.Channel.GetStorageCache(_cmstid, userid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStorageCacheAsync(int _cmstid, int userid) {
            return base.Channel.GetStorageCacheAsync(_cmstid, userid);
        }
        
        public string GetDepPowerForAndoird(int cmstId, int userId) {
            return base.Channel.GetDepPowerForAndoird(cmstId, userId);
        }
        
        public System.Threading.Tasks.Task<string> GetDepPowerForAndoirdAsync(int cmstId, int userId) {
            return base.Channel.GetDepPowerForAndoirdAsync(cmstId, userId);
        }
        
        public System.Data.DataSet GetPersonCache(int _cmstid) {
            return base.Channel.GetPersonCache(_cmstid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPersonCacheAsync(int _cmstid) {
            return base.Channel.GetPersonCacheAsync(_cmstid);
        }
        
        public System.Data.DataSet GetArrivalModeCache(int CmstId) {
            return base.Channel.GetArrivalModeCache(CmstId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetArrivalModeCacheAsync(int CmstId) {
            return base.Channel.GetArrivalModeCacheAsync(CmstId);
        }
        
        public System.Data.DataSet GetDeliveryModeCache(int CmstId) {
            return base.Channel.GetDeliveryModeCache(CmstId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDeliveryModeCacheAsync(int CmstId) {
            return base.Channel.GetDeliveryModeCacheAsync(CmstId);
        }
        
        public System.Data.DataSet GetDepotsCache(int CmstId) {
            return base.Channel.GetDepotsCache(CmstId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDepotsCacheAsync(int CmstId) {
            return base.Channel.GetDepotsCacheAsync(CmstId);
        }
        
        public string GetReservoirCacheAndroid(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data) {
            return base.Channel.GetReservoirCacheAndroid(data);
        }
        
        public System.Threading.Tasks.Task<string> GetReservoirCacheAndroidAsync(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data) {
            return base.Channel.GetReservoirCacheAndroidAsync(data);
        }
        
        public string GetDepositCacheAndroid(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data) {
            return base.Channel.GetDepositCacheAndroid(data);
        }
        
        public System.Threading.Tasks.Task<string> GetDepositCacheAndroidAsync(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data) {
            return base.Channel.GetDepositCacheAndroidAsync(data);
        }
        
        public string GetPersonCacheAndroid(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data) {
            return base.Channel.GetPersonCacheAndroid(data);
        }
        
        public System.Threading.Tasks.Task<string> GetPersonCacheAndroidAsync(CMST.Storage.Client.Proxy.BaseManageProxy.AndroidData data) {
            return base.Channel.GetPersonCacheAndroidAsync(data);
        }
        
        public string GetArrivalDeliveryModeCacheAndroid(int _cmstid, string type) {
            return base.Channel.GetArrivalDeliveryModeCacheAndroid(_cmstid, type);
        }
        
        public System.Threading.Tasks.Task<string> GetArrivalDeliveryModeCacheAndroidAsync(int _cmstid, string type) {
            return base.Channel.GetArrivalDeliveryModeCacheAndroidAsync(_cmstid, type);
        }
        
        public string GetReservoirAreaEntityByOpeID(int opeId) {
            return base.Channel.GetReservoirAreaEntityByOpeID(opeId);
        }
        
        public System.Threading.Tasks.Task<string> GetReservoirAreaEntityByOpeIDAsync(int opeId) {
            return base.Channel.GetReservoirAreaEntityByOpeIDAsync(opeId);
        }
    }
}
