//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMST.Storage.Client.Proxy.StocktakingManageProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StocktakingBill", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.StackingManage")]
    [System.SerializableAttribute()]
    public partial class StocktakingBill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DepotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MakeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReservoirIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservoirNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StocktakingIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DepotID {
            get {
                return this.DepotIDField;
            }
            set {
                if ((this.DepotIDField.Equals(value) != true)) {
                    this.DepotIDField = value;
                    this.RaisePropertyChanged("DepotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MakeTime {
            get {
                return this.MakeTimeField;
            }
            set {
                if ((this.MakeTimeField.Equals(value) != true)) {
                    this.MakeTimeField = value;
                    this.RaisePropertyChanged("MakeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Maker {
            get {
                return this.MakerField;
            }
            set {
                if ((this.MakerField.Equals(value) != true)) {
                    this.MakerField = value;
                    this.RaisePropertyChanged("Maker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakerName {
            get {
                return this.MakerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MakerNameField, value) != true)) {
                    this.MakerNameField = value;
                    this.RaisePropertyChanged("MakerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReservoirID {
            get {
                return this.ReservoirIDField;
            }
            set {
                if ((this.ReservoirIDField.Equals(value) != true)) {
                    this.ReservoirIDField = value;
                    this.RaisePropertyChanged("ReservoirID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReservoirName {
            get {
                return this.ReservoirNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservoirNameField, value) != true)) {
                    this.ReservoirNameField = value;
                    this.RaisePropertyChanged("ReservoirName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StocktakingID {
            get {
                return this.StocktakingIDField;
            }
            set {
                if ((this.StocktakingIDField.Equals(value) != true)) {
                    this.StocktakingIDField = value;
                    this.RaisePropertyChanged("StocktakingID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StocktakingQuery", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.StackingManage")]
    [System.SerializableAttribute()]
    public partial class StocktakingQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CurrentMinIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequesterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservoirIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CurrentMinID {
            get {
                return this.CurrentMinIDField;
            }
            set {
                if ((this.CurrentMinIDField.Equals(value) != true)) {
                    this.CurrentMinIDField = value;
                    this.RaisePropertyChanged("CurrentMinID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepotID {
            get {
                return this.DepotIDField;
            }
            set {
                if ((this.DepotIDField.Equals(value) != true)) {
                    this.DepotIDField = value;
                    this.RaisePropertyChanged("DepotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GalID {
            get {
                return this.GalIDField;
            }
            set {
                if ((this.GalIDField.Equals(value) != true)) {
                    this.GalIDField = value;
                    this.RaisePropertyChanged("GalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Requester {
            get {
                return this.RequesterField;
            }
            set {
                if ((this.RequesterField.Equals(value) != true)) {
                    this.RequesterField = value;
                    this.RaisePropertyChanged("Requester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservoirID {
            get {
                return this.ReservoirIDField;
            }
            set {
                if ((this.ReservoirIDField.Equals(value) != true)) {
                    this.ReservoirIDField = value;
                    this.RaisePropertyChanged("ReservoirID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StocktakingManageProxy.IStocktakingManageProxy")]
    public interface IStocktakingManageProxy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStocktakingManage/AddStocktakingBill", ReplyAction="http://tempuri.org/IStocktakingManage/AddStocktakingBillResponse")]
        string AddStocktakingBill(CMST.Storage.Client.Proxy.StocktakingManageProxy.StocktakingBill sb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStocktakingManage/AddStocktakingBill", ReplyAction="http://tempuri.org/IStocktakingManage/AddStocktakingBillResponse")]
        System.Threading.Tasks.Task<string> AddStocktakingBillAsync(CMST.Storage.Client.Proxy.StocktakingManageProxy.StocktakingBill sb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStocktakingManage/QueryStocktakingBillInfos", ReplyAction="http://tempuri.org/IStocktakingManage/QueryStocktakingBillInfosResponse")]
        string QueryStocktakingBillInfos(CMST.Storage.Client.Proxy.StocktakingManageProxy.StocktakingQuery sq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStocktakingManage/QueryStocktakingBillInfos", ReplyAction="http://tempuri.org/IStocktakingManage/QueryStocktakingBillInfosResponse")]
        System.Threading.Tasks.Task<string> QueryStocktakingBillInfosAsync(CMST.Storage.Client.Proxy.StocktakingManageProxy.StocktakingQuery sq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStocktakingManage/QueryStocktakingBillDetailsInfo", ReplyAction="http://tempuri.org/IStocktakingManage/QueryStocktakingBillDetailsInfoResponse")]
        string QueryStocktakingBillDetailsInfo(long stocktakingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStocktakingManage/QueryStocktakingBillDetailsInfo", ReplyAction="http://tempuri.org/IStocktakingManage/QueryStocktakingBillDetailsInfoResponse")]
        System.Threading.Tasks.Task<string> QueryStocktakingBillDetailsInfoAsync(long stocktakingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStocktakingManage/QueryStocktakingBillDetial", ReplyAction="http://tempuri.org/IStocktakingManage/QueryStocktakingBillDetialResponse")]
        string QueryStocktakingBillDetial(long stocktakingDetailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStocktakingManage/QueryStocktakingBillDetial", ReplyAction="http://tempuri.org/IStocktakingManage/QueryStocktakingBillDetialResponse")]
        System.Threading.Tasks.Task<string> QueryStocktakingBillDetialAsync(long stocktakingDetailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStocktakingManage/CheckStocktakingDetail", ReplyAction="http://tempuri.org/IStocktakingManage/CheckStocktakingDetailResponse")]
        string CheckStocktakingDetail(long stocktakingId, long stocktakingDetailId, int result, int checker, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStocktakingManage/CheckStocktakingDetail", ReplyAction="http://tempuri.org/IStocktakingManage/CheckStocktakingDetailResponse")]
        System.Threading.Tasks.Task<string> CheckStocktakingDetailAsync(long stocktakingId, long stocktakingDetailId, int result, int checker, string remark);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStocktakingManageProxyChannel : CMST.Storage.Client.Proxy.StocktakingManageProxy.IStocktakingManageProxy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StocktakingManageProxyClient : System.ServiceModel.ClientBase<CMST.Storage.Client.Proxy.StocktakingManageProxy.IStocktakingManageProxy>, CMST.Storage.Client.Proxy.StocktakingManageProxy.IStocktakingManageProxy {
        
        public StocktakingManageProxyClient() {
        }
        
        public StocktakingManageProxyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StocktakingManageProxyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StocktakingManageProxyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StocktakingManageProxyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddStocktakingBill(CMST.Storage.Client.Proxy.StocktakingManageProxy.StocktakingBill sb) {
            return base.Channel.AddStocktakingBill(sb);
        }
        
        public System.Threading.Tasks.Task<string> AddStocktakingBillAsync(CMST.Storage.Client.Proxy.StocktakingManageProxy.StocktakingBill sb) {
            return base.Channel.AddStocktakingBillAsync(sb);
        }
        
        public string QueryStocktakingBillInfos(CMST.Storage.Client.Proxy.StocktakingManageProxy.StocktakingQuery sq) {
            return base.Channel.QueryStocktakingBillInfos(sq);
        }
        
        public System.Threading.Tasks.Task<string> QueryStocktakingBillInfosAsync(CMST.Storage.Client.Proxy.StocktakingManageProxy.StocktakingQuery sq) {
            return base.Channel.QueryStocktakingBillInfosAsync(sq);
        }
        
        public string QueryStocktakingBillDetailsInfo(long stocktakingId) {
            return base.Channel.QueryStocktakingBillDetailsInfo(stocktakingId);
        }
        
        public System.Threading.Tasks.Task<string> QueryStocktakingBillDetailsInfoAsync(long stocktakingId) {
            return base.Channel.QueryStocktakingBillDetailsInfoAsync(stocktakingId);
        }
        
        public string QueryStocktakingBillDetial(long stocktakingDetailId) {
            return base.Channel.QueryStocktakingBillDetial(stocktakingDetailId);
        }
        
        public System.Threading.Tasks.Task<string> QueryStocktakingBillDetialAsync(long stocktakingDetailId) {
            return base.Channel.QueryStocktakingBillDetialAsync(stocktakingDetailId);
        }
        
        public string CheckStocktakingDetail(long stocktakingId, long stocktakingDetailId, int result, int checker, string remark) {
            return base.Channel.CheckStocktakingDetail(stocktakingId, stocktakingDetailId, result, checker, remark);
        }
        
        public System.Threading.Tasks.Task<string> CheckStocktakingDetailAsync(long stocktakingId, long stocktakingDetailId, int result, int checker, string remark) {
            return base.Channel.CheckStocktakingDetailAsync(stocktakingId, stocktakingDetailId, result, checker, remark);
        }
    }
}
