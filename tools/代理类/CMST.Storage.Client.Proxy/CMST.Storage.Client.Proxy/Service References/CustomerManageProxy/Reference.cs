//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMST.Storage.Client.Proxy.CustomerManageProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyData", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.CustomerManage")]
    [System.SerializableAttribute()]
    public partial class CompanyData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract> CcosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyEntity CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyDetailEntity CompanyDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.ConnectorEntity> ConnectorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyStorageEntity> CsesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyServicesEntity> CsseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.SealEntity> SealsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract> Ccos {
            get {
                return this.CcosField;
            }
            set {
                if ((object.ReferenceEquals(this.CcosField, value) != true)) {
                    this.CcosField = value;
                    this.RaisePropertyChanged("Ccos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyEntity Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyDetailEntity CompanyDetail {
            get {
                return this.CompanyDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyDetailField, value) != true)) {
                    this.CompanyDetailField = value;
                    this.RaisePropertyChanged("CompanyDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.ConnectorEntity> Connectors {
            get {
                return this.ConnectorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectorsField, value) != true)) {
                    this.ConnectorsField = value;
                    this.RaisePropertyChanged("Connectors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyStorageEntity> Cses {
            get {
                return this.CsesField;
            }
            set {
                if ((object.ReferenceEquals(this.CsesField, value) != true)) {
                    this.CsesField = value;
                    this.RaisePropertyChanged("Cses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyServicesEntity> Csse {
            get {
                return this.CsseField;
            }
            set {
                if ((object.ReferenceEquals(this.CsseField, value) != true)) {
                    this.CsseField = value;
                    this.RaisePropertyChanged("Csse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.SealEntity> Seals {
            get {
                return this.SealsField;
            }
            set {
                if ((object.ReferenceEquals(this.SealsField, value) != true)) {
                    this.SealsField = value;
                    this.RaisePropertyChanged("Seals");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.CustomerManage")]
    [System.SerializableAttribute()]
    public partial class CompanyEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HelpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReviserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RevisionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RootIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> StoragesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstId {
            get {
                return this.CmstIdField;
            }
            set {
                if ((this.CmstIdField.Equals(value) != true)) {
                    this.CmstIdField = value;
                    this.RaisePropertyChanged("CmstId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainSite {
            get {
                return this.DomainSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainSiteField, value) != true)) {
                    this.DomainSiteField = value;
                    this.RaisePropertyChanged("DomainSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HelpCode {
            get {
                return this.HelpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.HelpCodeField, value) != true)) {
                    this.HelpCodeField = value;
                    this.RaisePropertyChanged("HelpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageNum {
            get {
                return this.MessageNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageNumField, value) != true)) {
                    this.MessageNumField = value;
                    this.RaisePropertyChanged("MessageNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rank {
            get {
                return this.RankField;
            }
            set {
                if ((object.ReferenceEquals(this.RankField, value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Register {
            get {
                return this.RegisterField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisterField, value) != true)) {
                    this.RegisterField = value;
                    this.RaisePropertyChanged("Register");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationTime {
            get {
                return this.RegistrationTimeField;
            }
            set {
                if ((this.RegistrationTimeField.Equals(value) != true)) {
                    this.RegistrationTimeField = value;
                    this.RaisePropertyChanged("RegistrationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reviser {
            get {
                return this.ReviserField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviserField, value) != true)) {
                    this.ReviserField = value;
                    this.RaisePropertyChanged("Reviser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RevisionTime {
            get {
                return this.RevisionTimeField;
            }
            set {
                if ((this.RevisionTimeField.Equals(value) != true)) {
                    this.RevisionTimeField = value;
                    this.RaisePropertyChanged("RevisionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RootId {
            get {
                return this.RootIdField;
            }
            set {
                if ((this.RootIdField.Equals(value) != true)) {
                    this.RootIdField = value;
                    this.RaisePropertyChanged("RootId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.SortOrderField, value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Storages {
            get {
                return this.StoragesField;
            }
            set {
                if ((object.ReferenceEquals(this.StoragesField, value) != true)) {
                    this.StoragesField = value;
                    this.RaisePropertyChanged("Storages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tips {
            get {
                return this.TipsField;
            }
            set {
                if ((object.ReferenceEquals(this.TipsField, value) != true)) {
                    this.TipsField = value;
                    this.RaisePropertyChanged("Tips");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyDetailEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.CustomerManage")]
    [System.SerializableAttribute()]
    public partial class CompanyDetailEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Bank1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Bank1AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Bank2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Bank2AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EconomicTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsititutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagementModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagementScopeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpeningAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpeningBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerIdentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisteredCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bank1 {
            get {
                return this.Bank1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Bank1Field, value) != true)) {
                    this.Bank1Field = value;
                    this.RaisePropertyChanged("Bank1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bank1Account {
            get {
                return this.Bank1AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.Bank1AccountField, value) != true)) {
                    this.Bank1AccountField = value;
                    this.RaisePropertyChanged("Bank1Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bank2 {
            get {
                return this.Bank2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Bank2Field, value) != true)) {
                    this.Bank2Field = value;
                    this.RaisePropertyChanged("Bank2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bank2Account {
            get {
                return this.Bank2AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.Bank2AccountField, value) != true)) {
                    this.Bank2AccountField = value;
                    this.RaisePropertyChanged("Bank2Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyDetailID {
            get {
                return this.CompanyDetailIDField;
            }
            set {
                if ((this.CompanyDetailIDField.Equals(value) != true)) {
                    this.CompanyDetailIDField = value;
                    this.RaisePropertyChanged("CompanyDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditRecords {
            get {
                return this.CreditRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditRecordsField, value) != true)) {
                    this.CreditRecordsField = value;
                    this.RaisePropertyChanged("CreditRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EconomicType {
            get {
                return this.EconomicTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EconomicTypeField, value) != true)) {
                    this.EconomicTypeField = value;
                    this.RaisePropertyChanged("EconomicType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfDel {
            get {
                return this.IfDelField;
            }
            set {
                if ((this.IfDelField.Equals(value) != true)) {
                    this.IfDelField = value;
                    this.RaisePropertyChanged("IfDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Insititution {
            get {
                return this.InsititutionField;
            }
            set {
                if ((object.ReferenceEquals(this.InsititutionField, value) != true)) {
                    this.InsititutionField = value;
                    this.RaisePropertyChanged("Insititution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string License {
            get {
                return this.LicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseField, value) != true)) {
                    this.LicenseField = value;
                    this.RaisePropertyChanged("License");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainProduct {
            get {
                return this.MainProductField;
            }
            set {
                if ((object.ReferenceEquals(this.MainProductField, value) != true)) {
                    this.MainProductField = value;
                    this.RaisePropertyChanged("MainProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagementMode {
            get {
                return this.ManagementModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagementModeField, value) != true)) {
                    this.ManagementModeField = value;
                    this.RaisePropertyChanged("ManagementMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagementScope {
            get {
                return this.ManagementScopeField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagementScopeField, value) != true)) {
                    this.ManagementScopeField = value;
                    this.RaisePropertyChanged("ManagementScope");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpeningAccount {
            get {
                return this.OpeningAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningAccountField, value) != true)) {
                    this.OpeningAccountField = value;
                    this.RaisePropertyChanged("OpeningAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpeningBank {
            get {
                return this.OpeningBankField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningBankField, value) != true)) {
                    this.OpeningBankField = value;
                    this.RaisePropertyChanged("OpeningBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerIdentity {
            get {
                return this.OwnerIdentityField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIdentityField, value) != true)) {
                    this.OwnerIdentityField = value;
                    this.RaisePropertyChanged("OwnerIdentity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegisteredCapital {
            get {
                return this.RegisteredCapitalField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisteredCapitalField, value) != true)) {
                    this.RegisteredCapitalField = value;
                    this.RaisePropertyChanged("RegisteredCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyContract", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.ContractManage")]
    [System.SerializableAttribute()]
    public partial class CompanyContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmstIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EntryTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperstionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SignTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CmstID {
            get {
                return this.CmstIDField;
            }
            set {
                if ((this.CmstIDField.Equals(value) != true)) {
                    this.CmstIDField = value;
                    this.RaisePropertyChanged("CmstID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractID {
            get {
                return this.ContractIDField;
            }
            set {
                if ((this.ContractIDField.Equals(value) != true)) {
                    this.ContractIDField = value;
                    this.RaisePropertyChanged("ContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((this.EntryPersonField.Equals(value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPersonName {
            get {
                return this.EntryPersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonNameField, value) != true)) {
                    this.EntryPersonNameField = value;
                    this.RaisePropertyChanged("EntryPersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EntryTime {
            get {
                return this.EntryTimeField;
            }
            set {
                if ((this.EntryTimeField.Equals(value) != true)) {
                    this.EntryTimeField = value;
                    this.RaisePropertyChanged("EntryTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfDel {
            get {
                return this.IfDelField;
            }
            set {
                if ((this.IfDelField.Equals(value) != true)) {
                    this.IfDelField = value;
                    this.RaisePropertyChanged("IfDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperstionStatus {
            get {
                return this.OperstionStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OperstionStatusField, value) != true)) {
                    this.OperstionStatusField = value;
                    this.RaisePropertyChanged("OperstionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SignTime {
            get {
                return this.SignTimeField;
            }
            set {
                if ((this.SignTimeField.Equals(value) != true)) {
                    this.SignTimeField = value;
                    this.RaisePropertyChanged("SignTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectorEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.CustomerManage")]
    [System.SerializableAttribute()]
    public partial class ConnectorEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConnectorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DutyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QQField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyServicesEntity> ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tel1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tel2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TempUpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WinxinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZodiacField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConnectorID {
            get {
                return this.ConnectorIDField;
            }
            set {
                if ((this.ConnectorIDField.Equals(value) != true)) {
                    this.ConnectorIDField = value;
                    this.RaisePropertyChanged("ConnectorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectorName {
            get {
                return this.ConnectorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectorNameField, value) != true)) {
                    this.ConnectorNameField = value;
                    this.RaisePropertyChanged("ConnectorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duty {
            get {
                return this.DutyField;
            }
            set {
                if ((object.ReferenceEquals(this.DutyField, value) != true)) {
                    this.DutyField = value;
                    this.RaisePropertyChanged("Duty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identity {
            get {
                return this.IdentityField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentityField, value) != true)) {
                    this.IdentityField = value;
                    this.RaisePropertyChanged("Identity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfDefault {
            get {
                return this.IfDefaultField;
            }
            set {
                if ((this.IfDefaultField.Equals(value) != true)) {
                    this.IfDefaultField = value;
                    this.RaisePropertyChanged("IfDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QQ {
            get {
                return this.QQField;
            }
            set {
                if ((object.ReferenceEquals(this.QQField, value) != true)) {
                    this.QQField = value;
                    this.RaisePropertyChanged("QQ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyServicesEntity> Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel1 {
            get {
                return this.Tel1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tel1Field, value) != true)) {
                    this.Tel1Field = value;
                    this.RaisePropertyChanged("Tel1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel2 {
            get {
                return this.Tel2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Tel2Field, value) != true)) {
                    this.Tel2Field = value;
                    this.RaisePropertyChanged("Tel2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TempUpdateTime {
            get {
                return this.TempUpdateTimeField;
            }
            set {
                if ((this.TempUpdateTimeField.Equals(value) != true)) {
                    this.TempUpdateTimeField = value;
                    this.RaisePropertyChanged("TempUpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Winxin {
            get {
                return this.WinxinField;
            }
            set {
                if ((object.ReferenceEquals(this.WinxinField, value) != true)) {
                    this.WinxinField = value;
                    this.RaisePropertyChanged("Winxin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zodiac {
            get {
                return this.ZodiacField;
            }
            set {
                if ((object.ReferenceEquals(this.ZodiacField, value) != true)) {
                    this.ZodiacField = value;
                    this.RaisePropertyChanged("Zodiac");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyStorageEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.CustomerManage")]
    [System.SerializableAttribute()]
    public partial class CompanyStorageEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyStorageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StorageIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyStorageID {
            get {
                return this.CompanyStorageIDField;
            }
            set {
                if ((this.CompanyStorageIDField.Equals(value) != true)) {
                    this.CompanyStorageIDField = value;
                    this.RaisePropertyChanged("CompanyStorageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StorageID {
            get {
                return this.StorageIDField;
            }
            set {
                if ((this.StorageIDField.Equals(value) != true)) {
                    this.StorageIDField = value;
                    this.RaisePropertyChanged("StorageID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyServicesEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.CustomerManage")]
    [System.SerializableAttribute()]
    public partial class CompanyServicesEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ComServicesTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyContactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyServicesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ComServicesTypeID {
            get {
                return this.ComServicesTypeIDField;
            }
            set {
                if ((this.ComServicesTypeIDField.Equals(value) != true)) {
                    this.ComServicesTypeIDField = value;
                    this.RaisePropertyChanged("ComServicesTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyContactID {
            get {
                return this.CompanyContactIDField;
            }
            set {
                if ((this.CompanyContactIDField.Equals(value) != true)) {
                    this.CompanyContactIDField = value;
                    this.RaisePropertyChanged("CompanyContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyServicesID {
            get {
                return this.CompanyServicesIDField;
            }
            set {
                if ((this.CompanyServicesIDField.Equals(value) != true)) {
                    this.CompanyServicesIDField = value;
                    this.RaisePropertyChanged("CompanyServicesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SealEntity", Namespace="http://schemas.datacontract.org/2004/07/CMST.Storage.Server.Data.CustomerManage")]
    [System.SerializableAttribute()]
    public partial class SealEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IfUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SealIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SealImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SealNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TempUpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IfUse {
            get {
                return this.IfUseField;
            }
            set {
                if ((this.IfUseField.Equals(value) != true)) {
                    this.IfUseField = value;
                    this.RaisePropertyChanged("IfUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SealID {
            get {
                return this.SealIDField;
            }
            set {
                if ((this.SealIDField.Equals(value) != true)) {
                    this.SealIDField = value;
                    this.RaisePropertyChanged("SealID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SealImage {
            get {
                return this.SealImageField;
            }
            set {
                if ((object.ReferenceEquals(this.SealImageField, value) != true)) {
                    this.SealImageField = value;
                    this.RaisePropertyChanged("SealImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealName {
            get {
                return this.SealNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNameField, value) != true)) {
                    this.SealNameField = value;
                    this.RaisePropertyChanged("SealName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TempUpdateTime {
            get {
                return this.TempUpdateTimeField;
            }
            set {
                if ((this.TempUpdateTimeField.Equals(value) != true)) {
                    this.TempUpdateTimeField = value;
                    this.RaisePropertyChanged("TempUpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerManageProxy.ICustomerManageProxy")]
    public interface ICustomerManageProxy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyInfoByCode_Name_HelpCode", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyInfoByCode_Name_HelpCodeResponse")]
        string GetCompanyInfoByCode_Name_HelpCode(int cmstid, string code, string name, string helpcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyInfoByCode_Name_HelpCode", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyInfoByCode_Name_HelpCodeResponse")]
        System.Threading.Tasks.Task<string> GetCompanyInfoByCode_Name_HelpCodeAsync(int cmstid, string code, string name, string helpcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyALLorByCode_Name_HelpCode", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyALLorByCode_Name_HelpCodeResponse")]
        string GetCompanyALLorByCode_Name_HelpCode(int cmstid, string code, string name, string helpcode, string queryFileds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyALLorByCode_Name_HelpCode", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyALLorByCode_Name_HelpCodeResponse")]
        System.Threading.Tasks.Task<string> GetCompanyALLorByCode_Name_HelpCodeAsync(int cmstid, string code, string name, string helpcode, string queryFileds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/SaveCompany", ReplyAction="http://tempuri.org/ICustomerManage/SaveCompanyResponse")]
        string SaveCompany(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyData cd, int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/SaveCompany", ReplyAction="http://tempuri.org/ICustomerManage/SaveCompanyResponse")]
        System.Threading.Tasks.Task<string> SaveCompanyAsync(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyData cd, int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyById", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyByIdResponse")]
        string GetCompanyById(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyById", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyByIdResponse")]
        System.Threading.Tasks.Task<string> GetCompanyByIdAsync(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/QueryCompanyALLorByCode_Name_HelpCodePageInfo", ReplyAction="http://tempuri.org/ICustomerManage/QueryCompanyALLorByCode_Name_HelpCodePageInfoR" +
            "esponse")]
        string QueryCompanyALLorByCode_Name_HelpCodePageInfo(int cmstid, string code, string name, string helpcode, string queryFields, int Page, int PageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/QueryCompanyALLorByCode_Name_HelpCodePageInfo", ReplyAction="http://tempuri.org/ICustomerManage/QueryCompanyALLorByCode_Name_HelpCodePageInfoR" +
            "esponse")]
        System.Threading.Tasks.Task<string> QueryCompanyALLorByCode_Name_HelpCodePageInfoAsync(int cmstid, string code, string name, string helpcode, string queryFields, int Page, int PageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyAllIsUse", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyAllIsUseResponse")]
        string GetCompanyAllIsUse();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyAllIsUse", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyAllIsUseResponse")]
        System.Threading.Tasks.Task<string> GetCompanyAllIsUseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanySelectList", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanySelectListResponse")]
        string GetCompanySelectList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanySelectList", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanySelectListResponse")]
        System.Threading.Tasks.Task<string> GetCompanySelectListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyServicesTypeAll", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyServicesTypeAllResponse")]
        string GetCompanyServicesTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyServicesTypeAll", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyServicesTypeAllResponse")]
        System.Threading.Tasks.Task<string> GetCompanyServicesTypeAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCustomerCache", ReplyAction="http://tempuri.org/ICustomerManage/GetCustomerCacheResponse")]
        System.Data.DataSet GetCustomerCache(int _cmst_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCustomerCache", ReplyAction="http://tempuri.org/ICustomerManage/GetCustomerCacheResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerCacheAsync(int _cmst_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCustomerCacheAndroid", ReplyAction="http://tempuri.org/ICustomerManage/GetCustomerCacheAndroidResponse")]
        string GetCustomerCacheAndroid(int _cmst_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCustomerCacheAndroid", ReplyAction="http://tempuri.org/ICustomerManage/GetCustomerCacheAndroidResponse")]
        System.Threading.Tasks.Task<string> GetCustomerCacheAndroidAsync(int _cmst_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/QueryContractsPageInfo", ReplyAction="http://tempuri.org/ICustomerManage/QueryContractsPageInfoResponse")]
        string QueryContractsPageInfo(System.Nullable<int> CompanyID, int CmstID, string Status, string operationStatus, string QueryFields, int Page, int PageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/QueryContractsPageInfo", ReplyAction="http://tempuri.org/ICustomerManage/QueryContractsPageInfoResponse")]
        System.Threading.Tasks.Task<string> QueryContractsPageInfoAsync(System.Nullable<int> CompanyID, int CmstID, string Status, string operationStatus, string QueryFields, int Page, int PageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/SaveContract", ReplyAction="http://tempuri.org/ICustomerManage/SaveContractResponse")]
        string SaveContract(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract contract, int OperatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/SaveContract", ReplyAction="http://tempuri.org/ICustomerManage/SaveContractResponse")]
        System.Threading.Tasks.Task<string> SaveContractAsync(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract contract, int OperatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyContractsByCompanyID", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyContractsByCompanyIDResponse")]
        string GetCompanyContractsByCompanyID(int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/GetCompanyContractsByCompanyID", ReplyAction="http://tempuri.org/ICustomerManage/GetCompanyContractsByCompanyIDResponse")]
        System.Threading.Tasks.Task<string> GetCompanyContractsByCompanyIDAsync(int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/XQContract", ReplyAction="http://tempuri.org/ICustomerManage/XQContractResponse")]
        string XQContract(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract contract, int XQDays, string XqName, int OperatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/XQContract", ReplyAction="http://tempuri.org/ICustomerManage/XQContractResponse")]
        System.Threading.Tasks.Task<string> XQContractAsync(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract contract, int XQDays, string XqName, int OperatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/UpdateContract", ReplyAction="http://tempuri.org/ICustomerManage/UpdateContractResponse")]
        string UpdateContract(System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract> ccos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerManage/UpdateContract", ReplyAction="http://tempuri.org/ICustomerManage/UpdateContractResponse")]
        System.Threading.Tasks.Task<string> UpdateContractAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract> ccos);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerManageProxyChannel : CMST.Storage.Client.Proxy.CustomerManageProxy.ICustomerManageProxy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerManageProxyClient : System.ServiceModel.ClientBase<CMST.Storage.Client.Proxy.CustomerManageProxy.ICustomerManageProxy>, CMST.Storage.Client.Proxy.CustomerManageProxy.ICustomerManageProxy {
        
        public CustomerManageProxyClient() {
        }
        
        public CustomerManageProxyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerManageProxyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerManageProxyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerManageProxyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetCompanyInfoByCode_Name_HelpCode(int cmstid, string code, string name, string helpcode) {
            return base.Channel.GetCompanyInfoByCode_Name_HelpCode(cmstid, code, name, helpcode);
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyInfoByCode_Name_HelpCodeAsync(int cmstid, string code, string name, string helpcode) {
            return base.Channel.GetCompanyInfoByCode_Name_HelpCodeAsync(cmstid, code, name, helpcode);
        }
        
        public string GetCompanyALLorByCode_Name_HelpCode(int cmstid, string code, string name, string helpcode, string queryFileds) {
            return base.Channel.GetCompanyALLorByCode_Name_HelpCode(cmstid, code, name, helpcode, queryFileds);
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyALLorByCode_Name_HelpCodeAsync(int cmstid, string code, string name, string helpcode, string queryFileds) {
            return base.Channel.GetCompanyALLorByCode_Name_HelpCodeAsync(cmstid, code, name, helpcode, queryFileds);
        }
        
        public string SaveCompany(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyData cd, int mode) {
            return base.Channel.SaveCompany(cd, mode);
        }
        
        public System.Threading.Tasks.Task<string> SaveCompanyAsync(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyData cd, int mode) {
            return base.Channel.SaveCompanyAsync(cd, mode);
        }
        
        public string GetCompanyById(int CompanyId) {
            return base.Channel.GetCompanyById(CompanyId);
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyByIdAsync(int CompanyId) {
            return base.Channel.GetCompanyByIdAsync(CompanyId);
        }
        
        public string QueryCompanyALLorByCode_Name_HelpCodePageInfo(int cmstid, string code, string name, string helpcode, string queryFields, int Page, int PageSize) {
            return base.Channel.QueryCompanyALLorByCode_Name_HelpCodePageInfo(cmstid, code, name, helpcode, queryFields, Page, PageSize);
        }
        
        public System.Threading.Tasks.Task<string> QueryCompanyALLorByCode_Name_HelpCodePageInfoAsync(int cmstid, string code, string name, string helpcode, string queryFields, int Page, int PageSize) {
            return base.Channel.QueryCompanyALLorByCode_Name_HelpCodePageInfoAsync(cmstid, code, name, helpcode, queryFields, Page, PageSize);
        }
        
        public string GetCompanyAllIsUse() {
            return base.Channel.GetCompanyAllIsUse();
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyAllIsUseAsync() {
            return base.Channel.GetCompanyAllIsUseAsync();
        }
        
        public string GetCompanySelectList() {
            return base.Channel.GetCompanySelectList();
        }
        
        public System.Threading.Tasks.Task<string> GetCompanySelectListAsync() {
            return base.Channel.GetCompanySelectListAsync();
        }
        
        public string GetCompanyServicesTypeAll() {
            return base.Channel.GetCompanyServicesTypeAll();
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyServicesTypeAllAsync() {
            return base.Channel.GetCompanyServicesTypeAllAsync();
        }
        
        public System.Data.DataSet GetCustomerCache(int _cmst_id) {
            return base.Channel.GetCustomerCache(_cmst_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerCacheAsync(int _cmst_id) {
            return base.Channel.GetCustomerCacheAsync(_cmst_id);
        }
        
        public string GetCustomerCacheAndroid(int _cmst_id) {
            return base.Channel.GetCustomerCacheAndroid(_cmst_id);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerCacheAndroidAsync(int _cmst_id) {
            return base.Channel.GetCustomerCacheAndroidAsync(_cmst_id);
        }
        
        public string QueryContractsPageInfo(System.Nullable<int> CompanyID, int CmstID, string Status, string operationStatus, string QueryFields, int Page, int PageSize) {
            return base.Channel.QueryContractsPageInfo(CompanyID, CmstID, Status, operationStatus, QueryFields, Page, PageSize);
        }
        
        public System.Threading.Tasks.Task<string> QueryContractsPageInfoAsync(System.Nullable<int> CompanyID, int CmstID, string Status, string operationStatus, string QueryFields, int Page, int PageSize) {
            return base.Channel.QueryContractsPageInfoAsync(CompanyID, CmstID, Status, operationStatus, QueryFields, Page, PageSize);
        }
        
        public string SaveContract(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract contract, int OperatorID) {
            return base.Channel.SaveContract(contract, OperatorID);
        }
        
        public System.Threading.Tasks.Task<string> SaveContractAsync(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract contract, int OperatorID) {
            return base.Channel.SaveContractAsync(contract, OperatorID);
        }
        
        public string GetCompanyContractsByCompanyID(int companyId) {
            return base.Channel.GetCompanyContractsByCompanyID(companyId);
        }
        
        public System.Threading.Tasks.Task<string> GetCompanyContractsByCompanyIDAsync(int companyId) {
            return base.Channel.GetCompanyContractsByCompanyIDAsync(companyId);
        }
        
        public string XQContract(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract contract, int XQDays, string XqName, int OperatorID) {
            return base.Channel.XQContract(contract, XQDays, XqName, OperatorID);
        }
        
        public System.Threading.Tasks.Task<string> XQContractAsync(CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract contract, int XQDays, string XqName, int OperatorID) {
            return base.Channel.XQContractAsync(contract, XQDays, XqName, OperatorID);
        }
        
        public string UpdateContract(System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract> ccos) {
            return base.Channel.UpdateContract(ccos);
        }
        
        public System.Threading.Tasks.Task<string> UpdateContractAsync(System.Collections.Generic.List<CMST.Storage.Client.Proxy.CustomerManageProxy.CompanyContract> ccos) {
            return base.Channel.UpdateContractAsync(ccos);
        }
    }
}
